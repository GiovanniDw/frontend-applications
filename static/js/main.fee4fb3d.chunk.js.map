{"version":3,"sources":["GlobalStyles.jsx","hooks/useDataApi.jsx","helpers/useWindowSize.jsx","helpers/useResizeObservers.js","components/SVGContainer.jsx","components/Loading.jsx","components/StyledComponents.jsx","components/Legend.jsx","components/ZoomContainer.jsx","components/DrawViz/Map.jsx","components/Chart.jsx","components/DrawViz/index.jsx","components/DrawNL.jsx","helpers/formatters.jsx","reducers/parkingReducer.jsx","App.jsx","data/useNLD.jsx","data/useWorld.jsx","reportWebVitals.js","index.jsx"],"names":["colors","darkBlue","blue","lightBlue","dark","darkGray","midGray","lightGray","light","white","darkGreen","green","lightGreen","orange","darkPurple","purple","red","yellow","px2vw","size","width","GlobalStyle","createGlobalStyle","normalize","useDataApi","initialUrl","initialData","useState","data","setData","url","setUrl","isLoading","setIsLoading","useEffect","cleanParkingData","d","province","replace","cleanProvince","usage","cleanUsage","id","minimumHeightInMeters","latitude","longitude","capacity","ls","localStorage","getItem","dsv","autoType","then","setItem","err","console","log","makeAPICall","useWindowSize","useDimensions","ref","getRect","current","rect","setRect","handleResize","useCallback","useLayoutEffect","element","ResizeObserver","resizeObserver","observe","disconnect","window","addEventListener","removeEventListener","getBoundingClientRect","bottom","height","left","right","top","Context","createContext","SVGContainer","props","children","className","svgRef","useRef","svg","setSvg","viewBox","Provider","value","useSvg","useContext","Loading","StyledLoading","StyledSpinner","cx","cy","r","fill","strokeWidth","styled","div","primary","Container","circle","active","Legend","colorScale","tickSpacing","tickSize","tickTextOffset","fadeOpacity","onHover","dimensions","LegendLabel","sizeScale","dispatch","svgElement","sizeLegendRef","hoveredUsage","setHoveredUsage","select","selection","append","text","attr","sizelegendG","selectAll","join","format","transform","textAnchor","x","y","domain","map","domainValue","i","onMouseEnter","type","payload","onMouseOut","dy","opacity","ZoomContainer","path","activeProvinceFeature","setActiveProvinceFeature","k","setTransform","clientWidth","clientHeight","zoomMap","zoom","scaleExtent","on","event","currentProvince","node","bounds","x0","y0","x1","y1","transition","duration","call","zoomIdentity","translate","scale","Math","min","max","zoomTransform","invert","Map","nld","activateProvince","gemeenteBorder","gemeente","provinceBorder","currentCenter","center","geoCentroid","geoBounds","geoDistance","sqrt","projection","geoMercator","geoPath","Provinces","useMemo","features","onClick","title","properties","statnaam","Marks","sizeValue","colorValue","allLocations","activeLocations","proj","key","capacitySizeScale","color","includes","name","Circle","isShowing","useSpring","config","to","from","StyledCircle","animated","Chart","next","cancel","a","t","nestedActiveLocations","pieChartRef","pieSize","cache","dataByUsage","outerRadius","createPie","pie","padAngle","sort","arcGenerator","arc","innerRadius","pieData","prevPieData","selectionWithData","exit","remove","enter","merge","attrTween","interpolator","interpolate","style","drawChart","DrawViz","filteredData","colorRange","maxRadius","containerRef","useResizeAware","resizeListener","sizes","scaleOrdinal","range","scaleSqrt","g","formatData","maxSizeVal","city","minHeign","nestedData","rollups","v","length","filterParkingByProvince","filter","parkingReducer","state","action","filterParkingByUsage","activeProvince","activeUsage","reset","initialState","activeCity","provinces","App","useReducer","parkingData","vizWrapperRef","json","topology","objects","gemeente_2020","provincie_2020","feature","mesh","b","useNLD","countries","land","useWrld","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee4fb3d.chunk.js","sourcesContent":["import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nexport const colors = {\n\tdarkBlue: '#2F80ED',\n\tblue: '#2D9CDB',\n\tlightBlue: '#B3E5FC',\n\tdark: '#333333',\n\tdarkGray: '#4F4F4F',\n\tmidGray: '#828282',\n\tlightGray: '#BDBDBD',\n\tlight: '#E0E0E0',\n\twhite: '#F2F2F2',\n\tdarkGreen: '#219653',\n\tgreen: '#27AE60',\n\tlightGreen: '#6FCF97',\n\torange: '#F2994A',\n\tdarkPurple: '#9B51E0',\n\tpurple: '#BB6BD9',\n\tred: '#EB5757',\n\tyellow: '#F2C94C',\n};\n\n/**\n * Converts a CSS hex color value to RGBA.\n * @param {string} hex - Expanded hexadecimal CSS color value.\n * @param {number} alpha - Alpha as a decimal.\n * @returns {string} RGBA CSS color value.\n */\nexport const addAlpha = (hex, alpha) => {\n\tconst r = parseInt(hex.substring(1, 3), 16);\n\tconst g = parseInt(hex.substring(3, 5), 16);\n\tconst b = parseInt(hex.substring(5, 7), 16);\n\treturn `rgba(${r}, ${g}, ${b}, ${alpha})`;\n};\n\nexport const px2vw = (size, width = 1440) => `${(size / width) * 100}vw`;\n\nexport const GlobalStyle = createGlobalStyle`\n    ${normalize};\n\n\t* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  html {\n\t\n\t  box-sizing: border-box;\n        overflow-y: scroll;\n\t\t\n  }\n  #root {\n\t  ${'' /* min-width:100vw; */}\n\t  ${'' /* min-height:100vh; */}\n\t  ${'' /* -webkit-overflow-scrolling: touch; */}\n\t  padding-top: min(16px, env(safe-area-inset-top));\n\t  padding-left: min(16px, env(safe-area-inset-left));\n        padding-right: min(16px, env(safe-area-inset-right));\n        padding-bottom: min(16px, env(safe-area-inset-bottom));\n\t\t\n  }\n  :root {\n\t--safe-area-inset-top   : 16px;\n    --safe-area-inset-right : 16px;\n    --safe-area-inset-bottom: 16px;\n    --safe-area-inset-left  : 16px;  \n\tbody {\n\t\tbackground-color: ${colors.white};\n\t\tfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n\t\t'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n\t\t'Helvetica Neue', sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\t${'' /* min-width:100%;\n\tmin-height:100%; */}\n\tmin-width:100%;\n\t\tmin-height:100%;\n\t\n\t}\n\tcode {\n\tfont-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n\t\tmonospace;\n}\n\n      font-size: 14px;\n\n      @media (min-width: 768px) {\n        font-size: 16px;\n      }\n\n      @media (min-width: 1024px) {\n        font-size: 18px;\n      }\n    }\n\n\n.App {\n  background-color: ${colors.white};\n  width:100vw;\n\theight:100vh;\n\tmax-height:100%;\n\tmax-width:100%;\n  ${'' /* margin: 0 auto; */}\n}\n.viz-wrapper {\n\twidth:100%;\n\theight:100%;\n\tdisplay:flex;\n\tposition:relative;\n\tpadding-bottom:50px;\n\tpadding-bottom:calc(50px + env(safe-area-inset-bottom));\n\t.title {\n\t\tposition: absolute;\n\t\tpadding-left:1em;\n\t}\n}\n\n.province {\n\tstroke-opacity: 0.5;\n\tstroke-width: 1px;\n\t/* stroke: none; */\n\tstroke-linejoin: round;\n\tstroke-linecap: round;\n\n&:hover {opacity:0.9;}\n\n}\n.gemeente {\n\tfill-opacity: 1;\n\t\n\t/* stroke: white; */\n}\n.gemeente-borders{\n\tfill: none;\n\tstroke: ${colors.lightGreen};\n\t${'' /* stroke-width: 1; */}\n\tstroke-linejoin: round;\n\t${'' /* stroke-linecap: round; */}\n\tpointer-events: none;\n}\n.provinces {\n\tfill: ${colors.lightGreen};\n\tstroke: ${colors.white};\n\t${'' /* transition: 0.3s; */}\n}\n\n.provinces .active {\n\topacity: .8;\n\ttransition: visibility 0s, opacity 0.3s linear;\n}\n\n.province-borders {\n\tfill: none;\n\tstroke: var(--white);\n\tstroke-width: 1;\n\tstroke-linejoin: round;\n\tstroke-linecap: round;\n\tpointer-events: none;\n}\n\n.gemeente-grens {\n\tstroke-linejoin: round;\n\tstroke-linecap: round;\n\tstroke: ${colors.green};\n\tstroke-opacity: 1;\n\t/* stroke-width: 0.1em; */\n\t/* transition-duration: 0.5s; */\n\tfill: ${colors.lightGreen};\n}\n\n.legend-label {\n\tfont-weight:bold;\n}\n\n    `;\n\nexport default GlobalStyle;\n","import { useState, useEffect } from 'react';\nimport {\n\tcsv,\n\tgroup,\n\tdsv,\n\tmap,\n\trollups,\n\trollup,\n\tautoType,\n\tnest,\n\tscaleOrdinal,\n} from 'd3';\n// https://www.robinwieruch.de/react-hooks-fetch-data/\n\nconst cleanProvince = (d) => {\n\tif (!d.province) return;\n\td.province = d.province.replace('Fryslân', 'Friesland');\n\treturn d;\n};\n\nconst cleanUsage = (d) => {\n\td.usage = d.usage\n\t\t.replace('park and ride', 'P+R Parkeerplaats')\n\t\t.replace('garage', 'Parkeergarage')\n\t\t.replace('terrain', 'Parkeerterrein');\n\treturn;\n};\n// const cleanParkingData = (d) => {\n// \tcleanProvince(d);\n// \tcleanUsage(d);\n// \td.id = +d.id;\n// \td.minimumHeightInMeters = +d.minimumHeightInMeters;\n// \td.latitude = +d.latitude;\n// \td.longitude = +d.longitude;\n// \td.capacity = +d.capacity;\n// \t// console.log(d);\n\n// \treturn d;\n// };\n\nconst useDataApi = (initialUrl, initialData) => {\n\tconst [data, setData] = useState(initialData);\n\tconst [url, setUrl] = useState(initialUrl);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst cleanParkingData = (d) => {\n\t\t\tcleanProvince(d);\n\t\t\tcleanUsage(d);\n\t\t\td.id = +d.id;\n\t\t\td.minimumHeightInMeters = +d.minimumHeightInMeters;\n\t\t\td.latitude = +d.latitude;\n\t\t\td.longitude = +d.longitude;\n\t\t\td.capacity = +d.capacity;\n\t\t\t// console.log(d);\n\n\t\t\treturn d;\n\t\t};\n\t\tconst makeAPICall = () => {\n\t\t\tconst ls = localStorage.getItem(initialUrl);\n\t\t\tif (!ls) {\n\t\t\t\tdsv(';', ls, autoType, cleanParkingData).then(setData);\n\t\t\t} else {\n\t\t\t\tsetIsLoading(true);\n\t\t\t\ttry {\n\t\t\t\t\tdsv(';', url, autoType, cleanParkingData).then(setData);\n\n\t\t\t\t\tlocalStorage.setItem(initialUrl, url);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log('err', err);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetIsLoading(false);\n\t\t};\n\t\tmakeAPICall();\n\t}, [url]);\n\n\treturn [{ data, isLoading }, setUrl];\n};\n\nexport default useDataApi;\n","import React, { useState, useEffect } from 'react';\n\nfunction useWindowSize() {\n\t// Initialize state with undefined width/height so server and client renders match\n\t// Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n\tconst [windowSize, setWindowSize] = useState({\n\t\twidth: undefined,\n\t\theight: undefined,\n\t});\n\n\tuseEffect(() => {\n\t\t// Handler to call on window resize\n\t\tfunction handleResize() {\n\t\t\t// Set window width/height to state\n\t\t\tsetWindowSize({\n\t\t\t\twidth: window.innerWidth,\n\t\t\t\theight: window.innerHeight,\n\t\t\t});\n\t\t}\n\n\t\t// Add event listener\n\t\twindow.addEventListener('resize', handleResize);\n\n\t\t// Call handler right away so state gets updated with initial window size\n\t\thandleResize();\n\n\t\t// Remove event listener on cleanup\n\t\treturn () => window.removeEventListener('resize', handleResize);\n\t}, []); // Empty array ensures that effect is only run on mount\n\n\treturn windowSize;\n}\n\nexport default useWindowSize;\n","import {\n\tuseEffect,\n\tuseState,\n\tuseRef,\n\tuseLayoutEffect,\n\tuseCallback,\n} from 'react';\n\nexport const useDimensions = (ref) => {\n\tconst [rect, setRect] = useState(getRect(ref ? ref.current : null));\n\n\tconst handleResize = useCallback(() => {\n\t\tif (!ref.current) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update client rect\n\t\tsetRect(getRect(ref.current));\n\t}, [ref]);\n\n\tuseLayoutEffect(() => {\n\t\tconst element = ref.current;\n\t\tif (!element) {\n\t\t\treturn;\n\t\t}\n\n\t\thandleResize();\n\n\t\tif (typeof ResizeObserver === 'function') {\n\t\t\tlet resizeObserver = new ResizeObserver(() => handleResize());\n\t\t\tresizeObserver.observe(element);\n\n\t\t\treturn () => {\n\t\t\t\tif (!resizeObserver) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresizeObserver.disconnect();\n\t\t\t\tresizeObserver = null;\n\t\t\t};\n\t\t} else {\n\t\t\t// Browser support, remove freely\n\t\t\twindow.addEventListener('resize', handleResize);\n\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener('resize', handleResize);\n\t\t\t};\n\t\t}\n\t}, [ref, handleResize]);\n\n\treturn rect;\n};\n\nfunction getRect(element) {\n\tif (!element) {\n\t\treturn {\n\t\t\tbottom: 0,\n\t\t\theight: 0,\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\twidth: 0,\n\t\t};\n\t}\n\n\treturn element.getBoundingClientRect();\n}\n","import React, {\n\tuseEffect,\n\tuseRef,\n\tuseState,\n\tcreateContext,\n\tuseContext,\n} from 'react';\nimport { useSpring, animated } from 'react-spring';\nconst Context = createContext(null);\n\nexport const SVGContainer = (props) => {\n\tconst { size, children, className } = props;\n\n\tconst { width, height } = size;\n\n\tconst svgRef = useRef(null);\n\tconst [svg, setSvg] = useState(null);\n\tuseEffect(() => setSvg(svgRef.current), [size]);\n\treturn (\n\t\t<svg\n\t\t\tclassName={className}\n\t\t\tref={svgRef}\n\t\t\tviewBox={`0 0 ${width} ${height}`}\n\t\t\twidth={width}\n\t\t\theight={height}\n\t\t>\n\t\t\t<Context.Provider value={svg}>{children}</Context.Provider>\n\t\t</svg>\n\t);\n};\n\nexport function useSvg() {\n\treturn useContext(Context);\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { colors } from '../GlobalStyles';\nexport const Loading = () => (\n\t<StyledLoading>\n\t\t<StyledSpinner viewBox='0 0 50 50'>\n\t\t\t<circle\n\t\t\t\tclassName='path'\n\t\t\t\tcx='25'\n\t\t\t\tcy='25'\n\t\t\t\tr='20'\n\t\t\t\tfill='none'\n\t\t\t\tstrokeWidth='4'\n\t\t\t/>\n\t\t\t<circle\n\t\t\t\tclassName='path'\n\t\t\t\tcx='25'\n\t\t\t\tcy='25'\n\t\t\t\tr='20'\n\t\t\t\tfill='none'\n\t\t\t\tstrokeWidth='4'\n\t\t\t/>\n\t\t\t<circle\n\t\t\t\tclassName='path'\n\t\t\t\tcx='25'\n\t\t\t\tcy='25'\n\t\t\t\tr='20'\n\t\t\t\tfill='none'\n\t\t\t\tstrokeWidth='4'\n\t\t\t/>\n\t\t</StyledSpinner>\n\t</StyledLoading>\n);\n\nexport const StyledSpinner = styled.svg`\n\tanimation: rotate 2s linear infinite;\n\tmargin: -25px 0 0 -25px;\n\twidth: 50px;\n\theight: 50px;\n\n\t& .path {\n\t\tstroke: ${colors.green};\n\t\tstroke-linecap: round;\n\t\tanimation: dash 1.5s ease-in-out infinite;\n\t}\n\n\t@keyframes rotate {\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\n\t@keyframes dash {\n\t\t0% {\n\t\t\tstroke-dasharray: 1, 150;\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t\t50% {\n\t\t\tstroke-dasharray: 90, 150;\n\t\t\tstroke-dashoffset: -35;\n\t\t}\n\t\t100% {\n\t\t\tstroke-dasharray: 90, 150;\n\t\t\tstroke-dashoffset: -124;\n\t\t}\n\t}\n`;\n\nconst StyledLoading = styled.div`\n\theight: 100vh;\n\twidth: 100vw;\n\tbackground: ${colors.primary};\n\tz-index: 4;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { px2vw, colors } from '../GlobalStyles';\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\talign-items: stretch;\n\tjustify-content: center;\n\tpadding-top: ${px2vw(32)};\n\tpadding-left: ${px2vw(32)};\n\tpadding-right: ${px2vw(32)};\n\tpadding-bottom: ${px2vw(32)};\n\tmax-width: 100%;\n\theight: 100%;\n\n\t.map {\n\t\tcolor: red;\n\t}\n\t.legend {\n\t\tposition: absolute;\n\n\t\tbottom: 0;\n\t\tleft: 10px;\n\t}\n`;\n\nexport const StyledCircle = styled.circle`\n\t/* transition-duration: 100ms; */\n\t/* fill: ${(props) => (props.active ? colors.blue : colors.blue)}; */\n\tfill-opacity: 1;\n\t/* stroke: ${(props) => (props.active ? props.fill : colors.blue)}; */\n\tstroke-width: 1;\n\t/* stroke-width: ${(props) => (props.active ? 1 : 3)}; */\n\t/* stroke: ${(props) => props.fill}; */\n\t&:hover {\n\t\t/* stroke: ${(props) => colors.red}; */\n\t}\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { select, format } from 'd3';\nimport { StyledCircle } from './StyledComponents';\nexport const Checkbox = (props) => <input type='checkbox' {...props} />;\nimport {\n\tuseSpring,\n\tuseTransition,\n\tanimated,\n\tuseTrail,\n\tuseSprings,\n} from 'react-spring';\nimport { useSvg } from './SVGContainer';\nexport const Legend = ({\n\tcolorScale,\n\ttickSpacing = 25,\n\ttickSize = 8,\n\ttickTextOffset = -25,\n\tonHover,\n\tfadeOpacity,\n\tLegendLabel,\n\tclassName,\n\tdimensions,\n\tsizeScale,\n\tdispatch,\n}) => {\n\tconst { width, height } = dimensions;\n\tconst svgElement = useSvg();\n\tconst sizeLegendRef = useRef();\n\tconst [hoveredUsage, setHoveredUsage] = useState(null);\n\tuseEffect(() => {\n\t\tif (!svgElement || !sizeScale) return;\n\n\t\tconst svg = select(svgElement);\n\t\tlet circleX = 0;\n\n\t\tconst sizeValues = [100, 1000, 2500];\n\t\tconst selection = select(sizeLegendRef.current);\n\n\t\tselection\n\t\t\t.append('text')\n\t\t\t.text('Capaciteit Parkeergarage')\n\t\t\t.attr('transform', `translate(${circleX},80)`)\n\t\t\t.attr('class', 'legend-label');\n\n\t\tconst sizelegendG = selection\n\t\t\t.append('g')\n\t\t\t.attr('fill', '#444')\n\t\t\t.attr('transform', `translate(${circleX},140)`)\n\t\t\t.attr('text-anchor', 'end')\n\t\t\t.selectAll('g')\n\t\t\t.data(sizeValues)\n\t\t\t.join('g');\n\t\tsizelegendG\n\t\t\t.append('circle')\n\t\t\t.attr('fill', 'none')\n\t\t\t.attr('stroke', '#444')\n\t\t\t.attr('cy', (d) => -sizeScale(d))\n\t\t\t.attr('r', sizeScale);\n\t\tsizelegendG\n\t\t\t.append('text')\n\t\t\t.attr('y', (d) => -10 - 3 * sizeScale(d))\n\t\t\t.attr('x', tickTextOffset)\n\t\t\t.attr('dy', '1.3em')\n\t\t\t.text(format('.0f'))\n\t\t\t.attr('class', 'legend-text');\n\t}, [svgElement, sizeLegendRef, sizeScale]);\n\n\treturn (\n\t\t<>\n\t\t\t<g transform={`translate(${width - 20}, ${100})`} textAnchor='end'>\n\t\t\t\t<g className='color-legend'>\n\t\t\t\t\t<text x={0} y={-25} className='legend-label'>\n\t\t\t\t\t\tSoort Parkeermogelijkheid\n\t\t\t\t\t</text>\n\t\t\t\t\t{colorScale.domain().map((domainValue, i) => (\n\t\t\t\t\t\t<g\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tclassName='tick'\n\t\t\t\t\t\t\ttransform={`translate(0,${i * tickSpacing})`}\n\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\tconst usage = domainValue;\n\t\t\t\t\t\t\t\tsetHoveredUsage(domainValue);\n\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: 'FILTER_PARKING_USAGE',\n\t\t\t\t\t\t\t\t\tpayload: { usage },\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonMouseOut={() => {\n\t\t\t\t\t\t\t\tsetHoveredUsage(null);\n\t\t\t\t\t\t\t\tdispatch({ type: 'RESET' });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<text x={tickTextOffset} dy='.32em'>\n\t\t\t\t\t\t\t\t{domainValue}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\t\tfill={colorScale(domainValue)}\n\t\t\t\t\t\t\t\tr={tickSize}\n\t\t\t\t\t\t\t\topacity={\n\t\t\t\t\t\t\t\t\thoveredUsage && domainValue !== hoveredUsage\n\t\t\t\t\t\t\t\t\t\t? fadeOpacity\n\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t))}\n\t\t\t\t</g>\n\t\t\t\t{sizeScale && (\n\t\t\t\t\t<g ref={sizeLegendRef} className='size-legend'></g>\n\t\t\t\t)}\n\t\t\t</g>\n\t\t</>\n\t);\n};\n\nexport default Legend;\n","import { select, zoom, zoomIdentity, zoomTransform } from 'd3';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSvg } from './SVGContainer';\n\nexport const ZoomContainer = (props) => {\n\tconst {\n\t\tchildren,\n\t\tpath,\n\t\tactiveProvinceFeature,\n\t\tsetActiveProvinceFeature,\n\t} = props;\n\n\tconst svgElement = useSvg();\n\n\tconst [{ x, y, k }, setTransform] = useState({ x: 0, y: 0, k: 1 });\n\n\tuseEffect(() => {\n\t\tif (!svgElement) return;\n\n\t\tconst svg = select(svgElement);\n\t\tconst width = svgElement.clientWidth;\n\t\tconst height = svgElement.clientHeight;\n\t\tconst zoomed = (event) => {\n\t\t\tconst { transform } = event;\n\t\t\tsetTransform(transform);\n\t\t};\n\t\tconst zoomMap = zoom().scaleExtent([1, 10]).on('zoom', zoomed);\n\t\tconst reset = () => {\n\t\t\tsetActiveProvinceFeature(null);\n\t\t\tsvg.transition()\n\t\t\t\t.duration(750)\n\t\t\t\t.call(\n\t\t\t\t\tzoomMap.transform,\n\t\t\t\t\tzoomIdentity,\n\t\t\t\t\tzoomTransform(svg).invert([width / 2, height / 2])\n\t\t\t\t);\n\t\t};\n\t\tconst currentProvince = select(activeProvinceFeature).node();\n\n\t\tif (activeProvinceFeature) {\n\t\t\tconst [[x0, y0], [x1, y1]] = path.bounds(currentProvince);\n\n\t\t\tsvg.selectAll('path');\n\t\t\tsvg.transition()\n\t\t\t\t.duration(750)\n\t\t\t\t.call(\n\t\t\t\t\tzoomMap.transform,\n\t\t\t\t\tzoomIdentity\n\t\t\t\t\t\t.translate(width / 2, height / 2)\n\t\t\t\t\t\t.scale(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t\t0.9 /\n\t\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t\t(x1 - x0) / width,\n\t\t\t\t\t\t\t\t\t\t(y1 - y0) / height\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.translate(-(x0 + x1) / 2, -(y0 + y1) / 2)\n\t\t\t\t);\n\t\t} else {\n\t\t\treset();\n\t\t}\n\t\tsvg.call(zoomMap);\n\t\treturn;\n\t}, [svgElement, activeProvinceFeature]);\n\n\treturn (\n\t\t<g transform={`translate(${x}, ${y}) scale(${k})`} strokeWidth={1 / k}>\n\t\t\t{children}\n\t\t</g>\n\t);\n};\n","import React, { useMemo, useState, useRef, useEffect } from 'react';\nimport {\n\tuseSpring,\n\tuseTransition,\n\tanimated,\n\tuseTrail,\n\tuseSprings,\n\tinterpolate,\n\tSpring,\n} from 'react-spring';\nimport { Transition } from 'react-spring/renderprops';\nimport styled from 'styled-components';\nimport { colors, px2vw } from '../../GlobalStyles';\nimport { geoMercator, geoPath, geoCentroid, geoBounds, geoDistance } from 'd3';\nimport { ZoomContainer } from '../ZoomContainer';\nimport { useSvg } from '../SVGContainer';\nexport const Map = (props) => {\n\tconst {\n\t\tnld,\n\t\tactiveProvinceFeature,\n\t\tactivateProvince,\n\t\tsetActiveProvinceFeature,\n\t\tdimensions,\n\t} = props;\n\tconst { gemeente, gemeenteBorder, province, provinceBorder } = nld;\n\tconst { width, height } = dimensions;\n\tconst svgElement = useSvg();\n\tconst [currentCenter, setCurrentCenter] = useState(province);\n\tconst center = geoCentroid(currentCenter);\n\tconst bounds = geoBounds(currentCenter);\n\tconst distance = geoDistance(bounds[1], bounds[0]);\n\tconst scale = height + width / distance / Math.sqrt(2);\n\n\tconst projection = geoMercator()\n\t\t.scale(scale)\n\t\t.center(center)\n\t\t.translate([width / 2, height / 2]);\n\n\tconst path = geoPath().projection(projection);\n\n\tconst renderNL = () => {};\n\n\tconst Provinces = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{useMemo(\n\t\t\t\t\t() => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<g className='gemeentes'>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tclassName='gemeente-borders'\n\t\t\t\t\t\t\t\t\td={path(gemeenteBorder)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</g>\n\n\t\t\t\t\t\t\t<g className='provinces'>\n\t\t\t\t\t\t\t\t{province.features.map((d) => (\n\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\tkey={d.id}\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\tactiveProvinceFeature === d\n\t\t\t\t\t\t\t\t\t\t\t\t? 'province active'\n\t\t\t\t\t\t\t\t\t\t\t\t: 'province'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\td={path(d)}\n\t\t\t\t\t\t\t\t\t\tonClick={() => activateProvince(d)}\n\t\t\t\t\t\t\t\t\t\ttitle={d.properties.statnaam}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tclassName='province-borders'\n\t\t\t\t\t\t\t\t\td={path(provinceBorder)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t\t[path, province, provinceBorder, gemeenteBorder]\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ZoomContainer\n\t\t\t\t{...nld}\n\t\t\t\tsetActiveProvinceFeature={setActiveProvinceFeature}\n\t\t\t\tactiveProvinceFeature={activeProvinceFeature}\n\t\t\t\tpath={path}\n\t\t\t\tsize={dimensions}\n\t\t\t\twidth={width}\n\t\t\t\theight={height}\n\t\t\t>\n\t\t\t\t{props.nld && <Provinces />}\n\t\t\t\t<Marks {...props} projection={projection} />\n\t\t\t</ZoomContainer>\n\t\t</>\n\t);\n};\n\nconst StyledProvincePath = styled.path`\n\ttransition-duration: 700ms;\n\n\t:hover {\n\t\topacity: 0.7;\n\t}\n`;\n\nconst Marks = (props) => {\n\tconst {\n\t\tprojection,\n\t\tsizeScale,\n\t\tcolorScale,\n\t\tsizeValue,\n\t\tcolorValue,\n\t\tallLocations,\n\t\tactiveLocations,\n\t} = props;\n\tconst springRef = useRef();\n\t// const style = useSpring({ opacity: 1, from: { opacity: 0 } });\n\tconst [visibleLocations, setVisibleLocations] = useState(true);\n\n\t// useEffect(() => {\n\t// \tif (!filteredUsage || !data) return;\n\t// \t// setVisibleLocations(filteredData);\n\t// \t// hoveredUsage\n\t// \t// \t? setVisibleLocations(filteredUsage)\n\t// \t// \t: setVisibleLocations(data);\n\n\t// \thoveredUsage ? setVisibleLocations(false) : setVisibleLocations(true);\n\t// }, [filteredUsage]);\n\n\treturn (\n\t\t<g className='parking-locations'>\n\t\t\t{allLocations.map((d) => {\n\t\t\t\tconst proj = projection([d.longitude, d.latitude]);\n\t\t\t\tconst r = sizeScale(sizeValue(d));\n\t\t\t\tconst fill = colorScale(colorValue(d));\n\n\t\t\t\treturn (\n\t\t\t\t\t<Circle\n\t\t\t\t\t\t{...d}\n\t\t\t\t\t\tkey={d.id}\n\t\t\t\t\t\tproj={proj}\n\t\t\t\t\t\t// cx={x}\n\t\t\t\t\t\t// cy={y}\n\t\t\t\t\t\tr={d.capacitySizeScale}\n\t\t\t\t\t\tfill={d.color}\n\t\t\t\t\t\tvalue={d.usage}\n\t\t\t\t\t\tactive={activeLocations && activeLocations.includes(d)}\n\t\t\t\t\t\t// active={\n\t\t\t\t\t\t// \thoveredUsage && d.usage !== hoveredUsage\n\t\t\t\t\t\t// \t\t? true\n\t\t\t\t\t\t// \t\t: false\n\t\t\t\t\t\t// }\n\t\t\t\t\t\t// opacity={\n\t\t\t\t\t\t// \thoveredUsage && d.usage !== hoveredUsage ? 0.1 : 0.8\n\t\t\t\t\t\t// }\n\t\t\t\t\t>\n\t\t\t\t\t\t<title> {d.name}</title>\n\t\t\t\t\t</Circle>\n\t\t\t\t);\n\t\t\t})}\n\t\t</g>\n\t);\n};\n\nconst Circle = (props) => {\n\tconst {\n\t\tvalue,\n\t\tr,\n\t\tfill,\n\t\ttransform,\n\t\tactive,\n\t\tproj,\n\t\tisShowing,\n\t\topacity,\n\t} = props;\n\n\t// const wasActive = useRef(false);\n\n\t// const setState = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n\tconst style = useSpring({\n\t\tconfig: {\n\t\t\tduration: 100,\n\t\t},\n\t\topacity: active ? 1 : 0.1,\n\t\tr: active ? r : r / 2,\n\t});\n\n\tconst newStyle = useSpring({\n\t\topacity: active ? 1 : 0.1,\n\t\tto: [\n\t\t\t{ opacity: 1, color: '#ffaaee', r: r },\n\t\t\t{ opacity: 0, color: 'rgb(14,26,19)', r: 1 },\n\t\t],\n\t\tfrom: { opacity: 0, color: 'red', r: r },\n\t});\n\n\treturn (\n\t\t<StyledCircle\n\t\t\tfill={fill}\n\t\t\tr={props.active && props.active ? r : r / 2}\n\t\t\topacity={props.active && props.active ? 1 : 0.3}\n\t\t\ttransform={`translate(${proj})`}\n\t\t/>\n\t);\n};\n\nconst StyledCircle = styled(animated.circle)`\n\ttransition-duration: 500ms;\n\t/* fill: ${(props) => (props.active ? colors.blue : colors.blue)}; */\n\t/* fill-opacity: 1; */\n\t/* stroke: ${(props) => (props.active ? colors.red : colors.blue)}; */\n\t/* stroke-width: 0.5; */\n\t/* stroke-width: ${(props) => (props.active ? 1 : 3)}; */\n\t&:hover {\n\t\tstroke: ${colors.white};\n\t}\n`;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { select, pie, arc, rollups, interpolate } from 'd3';\nimport { animated, useSpring } from 'react-spring';\nimport { useSvg } from './SVGContainer';\n\nimport { useDimensions } from '../helpers/useResizeObservers';\n\nconst animationDuration = 250;\nconst animationConfig = {\n\tto: async (next, cancel) => {\n\t\tawait next({ t: 1 });\n\t},\n\tfrom: { t: 0 },\n\tconfig: { duration: animationDuration },\n\treset: true,\n};\n\nexport const Chart = (props) => {\n\tconst {\n\t\tdata,\n\t\tdimensions,\n\t\tcolorScale,\n\t\tonHover,\n\t\tnestedActiveLocations,\n\t} = props;\n\tconst { width, height } = dimensions;\n\n\tconst svgElement = useSvg();\n\n\tconst pieChartRef = useRef();\n\n\tconst pieSize = useDimensions(pieChartRef);\n\tconst cache = useRef();\n\tuseEffect(() => {\n\t\tif (!data || !dimensions || !pieChartRef || !pieSize) return;\n\n\t\t// const dataByUsage = rollups(\n\t\t// \tdata,\n\t\t// \t(v) => v.length,\n\t\t// \t(d) => d.usage\n\t\t// );\n\t\t// cache.current = dataByUsage;\n\n\t\tconst drawChart = (dataByUsage) => {\n\t\t\tconst outerRadius = Math.min(width, height) / 10 - 1;\n\n\t\t\tconst createPie = pie()\n\t\t\t\t.padAngle(0)\n\t\t\t\t.value((d) => d[1])\n\t\t\t\t.sort(null);\n\t\t\tconst arcGenerator = arc().innerRadius(20).outerRadius(outerRadius);\n\n\t\t\tconst pieData = createPie(dataByUsage);\n\t\t\tconst prevPieData = createPie(cache.current);\n\n\t\t\tconst selection = select(pieChartRef.current);\n\t\t\tconst selectionWithData = selection\n\t\t\t\t.selectAll('g.arc')\n\t\t\t\t.data(pieData);\n\t\t\tselectionWithData.exit().remove();\n\n\t\t\tconst selectionWidthUpdate = selectionWithData\n\t\t\t\t.enter()\n\t\t\t\t.append('g')\n\t\t\t\t.attr('class', 'arc');\n\n\t\t\tconst path = selectionWidthUpdate\n\t\t\t\t.append('path')\n\t\t\t\t.merge(selectionWithData.select('path.arc'));\n\n\t\t\tconst arcTween = (d, i) => {\n\t\t\t\tconst interpolator = interpolate(prevPieData[i], d);\n\n\t\t\t\treturn (t) => arcGenerator(interpolator(t));\n\t\t\t};\n\n\t\t\tpath.attr('class', 'arc')\n\t\t\t\t.transition()\n\t\t\t\t.attrTween('d', arcTween)\n\t\t\t\t// .on('click', (d, i) => onHover(d.data[0]))\n\t\t\t\t.style('fill', (i) => colorScale(i.data[0]))\n\t\t\t\t.style('stroke', '#ffffff')\n\t\t\t\t.style('stroke-width', 2);\n\t\t};\n\n\t\tcache.current = nestedActiveLocations;\n\t\treturn drawChart(nestedActiveLocations);\n\t}, [svgElement, nestedActiveLocations, pieChartRef, dimensions]);\n\n\treturn (\n\t\t<>\n\t\t\t<g\n\t\t\t\ttransform={`translate(${width - 10 - pieSize.width / 2}, ${\n\t\t\t\t\theight - 10 - pieSize.width / 2\n\t\t\t\t})`}\n\t\t\t>\n\t\t\t\t<g ref={pieChartRef} className='arc'></g>\n\t\t\t</g>\n\t\t</>\n\t);\n};\n\nexport default Chart;\n","import React, { useRef, useState, useEffect, useMemo } from 'react';\nimport useResizeAware from 'react-resize-aware';\nimport { SVGContainer } from '../SVGContainer';\n\nimport { useDimensions, useBbox } from '../../helpers/useResizeObservers';\nimport Legend from '../Legend';\nimport { Map } from './Map';\nimport { max, scaleSqrt, scaleOrdinal } from 'd3';\n\nimport Chart from '../Chart';\n\nexport const DrawViz = (props) => {\n\tconst {\n\t\tnld,\n\t\tdata,\n\t\tfilteredData,\n\t\thoveredUsage,\n\t\tfadeOpacity,\n\t\tchildren,\n\t\tsetHoveredUsage,\n\t\tcolorRange,\n\t\tallLocations,\n\t\tdispatch,\n\t} = props;\n\tconst { gemeente, gemeenteBorder, province, provinceBorder } = nld;\n\t// const { allData } = data;\n\tconst [activeCity, setActiveCity] = useState(null);\n\tconst [maxRadius, setMaxradius] = useState(10);\n\tconst containerRef = useRef();\n\tconst dimensions = useDimensions(containerRef);\n\tconst [activeProvinceFeature, setActiveProvinceFeature] = useState(null);\n\tconst [resizeListener, sizes] = useResizeAware();\n\tconst sizeValue = (d) => d.capacity;\n\tconst colorValue = (d) => d.usage;\n\tconst colorScale = useMemo(\n\t\t() =>\n\t\t\tscaleOrdinal()\n\t\t\t\t.domain(allLocations.map(colorValue))\n\t\t\t\t.range(colorRange),\n\t\t[allLocations, colorValue, colorRange]\n\t);\n\n\tconst sizeScale = useMemo(\n\t\t() =>\n\t\t\tscaleSqrt()\n\t\t\t\t.domain([0, max(allLocations, sizeValue)])\n\t\t\t\t.range([0, maxRadius]),\n\t\t[allLocations, sizeValue, maxRadius]\n\t);\n\n\tconst activateProvince = (d) => {\n\t\tconst province = d.properties.statnaam;\n\t\tif (activeProvinceFeature === null && activeProvinceFeature !== d) {\n\t\t\tsetActiveProvinceFeature(d);\n\t\t\t// setMaxradius(5);\n\t\t\tprops.dispatch({\n\t\t\t\ttype: 'FILTER_ACTIVE_PROVINCE',\n\t\t\t\tpayload: { province },\n\t\t\t});\n\n\t\t\treturn;\n\t\t} else if (activeProvinceFeature === d) {\n\t\t\tsetActiveProvinceFeature(null);\n\t\t\t// setMaxradius(10);\n\t\t\tprops.dispatch({ type: 'RESET' });\n\t\t}\n\t};\n\n\tconst activateCity = (d) => {\n\t\tif (activeCity === null || activeCity !== d.city) {\n\t\t\treturn setActiveCity(d.city);\n\t\t}\n\t\tif (activeCity === d.city) {\n\t\t\treturn setActiveCity(null);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (!sizes) return;\n\t}, [sizes]);\n\n\treturn (\n\t\t<div className='viz-wrapper' ref={containerRef}>\n\t\t\t{resizeListener}\n\t\t\t<SVGContainer className='map' size={dimensions}>\n\t\t\t\t<Map\n\t\t\t\t\t{...props}\n\t\t\t\t\tnld={nld}\n\t\t\t\t\tcolorScale={colorScale}\n\t\t\t\t\tcolorValue={colorValue}\n\t\t\t\t\tactiveProvinceFeature={activeProvinceFeature}\n\t\t\t\t\tactivateProvince={activateProvince}\n\t\t\t\t\thoveredUsage={hoveredUsage}\n\t\t\t\t\tfadeOpacity={0.2}\n\t\t\t\t\tsizeScale={sizeScale}\n\t\t\t\t\tsizeValue={sizeValue}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tsetActiveProvinceFeature={setActiveProvinceFeature}\n\t\t\t\t/>\n\n\t\t\t\t<Legend\n\t\t\t\t\t{...props}\n\t\t\t\t\tclassName='legend'\n\t\t\t\t\tonHover={setHoveredUsage}\n\t\t\t\t\thoveredUsage={hoveredUsage}\n\t\t\t\t\tcolorScale={colorScale}\n\t\t\t\t\tcolorValue={colorValue}\n\t\t\t\t\ttickSpacing={22}\n\t\t\t\t\ttickSize={8}\n\t\t\t\t\ttickTextOffset={-18}\n\t\t\t\t\tfadeOpacity={0.2}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tsizeScale={sizeScale}\n\t\t\t\t/>\n\n\t\t\t\t<Chart\n\t\t\t\t\t{...props}\n\t\t\t\t\tdata={props.activeLocations}\n\t\t\t\t\tonHover={setHoveredUsage}\n\t\t\t\t\thoveredUsage={hoveredUsage}\n\t\t\t\t\tcolorScale={colorScale}\n\t\t\t\t\tcolorValue={colorValue}\n\t\t\t\t\tsizeValue={sizeValue}\n\t\t\t\t\tfadeOpacity={0.2}\n\t\t\t\t\tsetActiveProvinceFeature={setActiveProvinceFeature}\n\t\t\t\t\tactiveProvinceFeature={activeProvinceFeature}\n\t\t\t\t\tsetHoveredUsage={setHoveredUsage}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tsizeScale={sizeScale}\n\t\t\t\t/>\n\t\t\t</SVGContainer>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default DrawViz;\n","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { ZoomContainer } from './ZoomContainer';\nimport { colors, addAlpha } from '../GlobalStyles';\nimport { useSvg } from './SVGContainer';\nimport { geoMercator, geoPath, scaleLinear, max, min, select } from 'd3';\n\nexport const DrawNL = (props) => {\n\tconst { size, nld, penr } = props;\n\tconst { gemeente, province, provinceBorder } = nld;\n\tconst { allPenR } = penr;\n\n\tconst svgElement = useSvg();\n\n\tconst [activeProvince, setActiveProvince] = useState(null);\n\tconst [activeCity, setActiveCity] = useState(null);\n\tconst [provincesEl, setProvincesEl] = useState(null);\n\n\tconst activateProvince = (event, d) => {\n\t\tif (activeProvince === null || activeProvince !== d) {\n\t\t\treturn setActiveProvince(d);\n\t\t}\n\t\tif (activeProvince === d) {\n\t\t\treturn setActiveProvince(null);\n\t\t}\n\t};\n\tconst projection = geoMercator().scale(6000).center([5.55, 52.2]);\n\tconst path = geoPath().projection(projection);\n\tuseEffect(() => {\n\t\tif (!svgElement) return;\n\n\t\tconst svg = select(svgElement);\n\n\t\tconst gemeentes = svg.select('.gemeentes').selectAll('path');\n\t\tconst provinces = svg.select('.provinces').selectAll('path');\n\t\tconst parking = svg.select('.parking-locations').selectAll('circle');\n\n\t\tsetProvincesEl(provinces);\n\n\t\tconst capacityColors = scaleLinear()\n\t\t\t.domain([0, 1000])\n\t\t\t.range(['white', 'black']);\n\n\t\tgemeentes\n\t\t\t.data(gemeente.features)\n\t\t\t.enter()\n\t\t\t.append('path')\n\t\t\t.attr('d', path)\n\t\t\t.attr('class', 'gemeente-grens');\n\n\t\tprovinces\n\t\t\t.data(province.features)\n\t\t\t.enter()\n\t\t\t.append('path')\n\t\t\t.attr('d', path)\n\t\t\t.attr('class', 'province')\n\t\t\t.on('click', activateProvince);\n\n\t\tparking\n\t\t\t.data(allPenR)\n\t\t\t.enter()\n\t\t\t.append('circle')\n\t\t\t.attr('r', '1')\n\t\t\t.attr('cx', (d) => projection([d.longitude, d.latitude])[0])\n\t\t\t.attr('cy', (d) => projection([d.longitude, d.latitude])[1]);\n\t}, [svgElement]);\n\n\treturn (\n\t\t<ZoomContainer\n\t\t\tsize={size}\n\t\t\tsetActiveProvince={setActiveProvince}\n\t\t\tactiveProvince={activeProvince}\n\t\t\tprovinces={provincesEl}\n\t\t\tpath={path}\n\t\t>\n\t\t\t<g className='gemeentes' />\n\t\t\t<g className='provinces' />\n\t\t\t<g className='parking-locations' />\n\t\t</ZoomContainer>\n\t);\n};\n\nconst StyledG = styled.g``;\n\n// const Province = ({ d, isActive, onClick }) => {\n// \treturn (\n// \t\t<StyledProvincePath\n// \t\t\tclassName={isActive ? 'province active' : 'province'}\n// \t\t\td={d}\n// \t\t\tonClick={onClick}\n// \t\t\ttitle={d.properties}\n// \t\t/>\n// \t);\n// };\n\n// const StyledProvincePath = styled.path`\n// \t/* transition-duration: 700ms; */\n\n// \t:hover {\n// \t\topacity: 0.5;\n// \t}\n// `;\n\n// const Circle = ({\n// \tcx,\n// \tcy,\n// \tr,\n// \tdata,\n// \tactiveProvince,\n// \tonMouseEnter,\n// \tactiveCity,\n// \tfill,\n// }) => {\n// \tconst { province, city, capacity } = data;\n\n// \tif (activeProvince && activeProvince.properties.statnaam == province) {\n// \t\tr = r * 1.5;\n// \t}\n\n// \treturn (\n// \t\t<StyledCircle\n// \t\t\tcx={cx}\n// \t\t\tcy={cy}\n// \t\t\tr={r}\n// \t\t\tonClick={onMouseEnter}\n// \t\t\tactive={activeCity}\n// \t\t\tfill={fill}\n// \t\t/>\n// \t);\n// };\n\n// const StyledCircle = styled.circle`\n// \ttransition-duration: 700ms;\n// \t/* fill: ${(props) => (props.active ? colors.blue : colors.blue)}; */\n// \tfill-opacity: 1;\n// \tstroke: ${(props) => (props.active ? colors.red : colors.blue)};\n// \tstroke-width: 0.5;\n// \t&:hover {\n// \t\tfill: ${colors.darkBlue};\n// \t}\n// `;\n\nexport default DrawNL;\n","import {\n\tselect,\n\tpie,\n\tarc,\n\trollups,\n\tinterpolate,\n\tscaleOrdinal,\n\tscaleSqrt,\n\tmax,\n} from 'd3';\n\nimport { useMemo } from 'react';\n\nimport { GlobalStyle, colors, px2vw } from '../GlobalStyles';\n\n// const [maxRadius, setMaxradius] = useState(10);\n\nconst colorRange = [colors.darkBlue, colors.darkGray, colors.yellow];\nconst colorValue = (d) => d.usage;\nconst sizeValue = (d) => d.capacity;\nconst provinceValue = (d) => d.province;\nconst maxRadius = 10;\n\n// export const colorScale = () =>\n// \tscaleOrdinal().domain(data.map(colorValue)).range(colorRange);\n\n// export const sizeScale = () =>\n// \tscaleSqrt()\n// \t\t.domain([0, max(data, sizeValue)])\n// \t\t.range([0, maxRadius]);\n\nexport const formatData = (data) => {\n\tconst maxSizeVal = max(data, sizeValue);\n\tconsole.log(maxSizeVal);\n\tconst colorScale = scaleOrdinal()\n\t\t.domain(data.map(colorValue))\n\t\t.range(colorRange);\n\n\tconst capacitySizeScale = scaleSqrt()\n\t\t.domain([0, maxSizeVal])\n\t\t.range([0, maxRadius]);\n\n\treturn data.map((d) => {\n\t\t// const sizeScaleValue = (d) => sizeScale(sizeValue(d));\n\t\t// const colorScaleValue = (d) => colorScale(colorValue(d));\n\t\t// console.log(colorScaleValue);\n\n\t\treturn {\n\t\t\tid: d.id,\n\t\t\tname: d.name,\n\t\t\tprovince: d.province,\n\t\t\tusage: d.usage,\n\t\t\tcity: d.city,\n\t\t\tlatitude: d.latitude,\n\t\t\tlongitude: d.longitude,\n\t\t\tcapacity: d.capacity,\n\t\t\tminHeign: d.minimumHeightInMeters,\n\t\t\tactive: false,\n\t\t\tcolor: colorScale(colorValue(d)),\n\t\t\tcapacitySizeScale: capacitySizeScale(sizeValue(d)),\n\t\t\t// sizeScale: sizeScaleValue,\n\t\t\t// colorScale: colorScaleValue,\n\t\t};\n\t});\n};\n\nexport const nestedData = (data) => {\n\tconst nested = rollups(\n\t\tdata,\n\t\t(v) => v.length,\n\t\t(d) => d.usage\n\t);\n\n\treturn nested;\n};\n\nexport const filterParkingByUsage = (d, filter) => d.usage === filter;\nexport const filterParkingByProvince = (d, filter) => d.province === filter;\nexport const filterParkingByCity = (d, filter) => d.city === filter;\nexport const resetParkingFilter = (d) => {\n\td.active = false;\n\treturn d;\n};\n\n// export const colorScale (d) => scaleOrdinal()\n","/* eslint-disable indent */\nimport { filter } from 'lodash';\nimport React from 'react';\nimport { max, scaleSqrt, scaleOrdinal } from 'd3';\nimport {\n\tfilterParkingByUsage,\n\tfilterParkingByProvince,\n\tfilterParkingByCity,\n\tresetParkingFilter,\n\tnestedData,\n} from '../helpers/formatters';\n\nconst parkingReducer = (state, action) => {\n\tlet activeLocations;\n\tlet nestedActiveLocations;\n\tlet activeUsage;\n\tlet activeCity;\n\tlet province;\n\tlet usage;\n\n\tswitch (action.type) {\n\t\tcase 'INITIAL_API_CALL':\n\t\t\t// activeLocations = action.payload.data.filter((d) => filterParkingByUsage)\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tallLocations: action.payload.data,\n\t\t\t\tactiveLocations: action.payload.data,\n\t\t\t\tnestedActiveLocations: nestedData(action.payload.data),\n\t\t\t};\n\t\tcase 'FILTER_PARKING_USAGE':\n\t\t\tusage = action.payload.usage;\n\t\t\tactiveLocations = state.allLocations.filter((d) =>\n\t\t\t\tfilterParkingByUsage(d, usage)\n\t\t\t);\n\n\t\t\tif (state.activeProvince !== 'all') {\n\t\t\t\tactiveLocations = activeLocations.filter((d) =>\n\t\t\t\t\tfilterParkingByProvince(d, state.activeProvince)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveLocations,\n\t\t\t\tactiveUsage: usage,\n\t\t\t};\n\t\tcase 'FILTER_ACTIVE_PROVINCE':\n\t\t\tprovince = action.payload.province;\n\t\t\tif (province !== null) {\n\t\t\t\tactiveLocations = state.allLocations.filter((d) =>\n\t\t\t\t\tfilterParkingByProvince(d, province)\n\t\t\t\t);\n\t\t\t\t// .filter((d) => filterParkingByUsage(d, state.activeUsage));\n\t\t\t\t// } else if (province === state.activeProvince) {\n\t\t\t\t// \tprovince = null;\n\t\t\t} else {\n\t\t\t\tactiveLocations = state.allLocations.filter((d) =>\n\t\t\t\t\tfilterParkingByProvince(d, state.activeUsage)\n\t\t\t\t);\n\t\t\t}\n\t\t\tnestedActiveLocations = nestedData(activeLocations);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveLocations,\n\t\t\t\tnestedActiveLocations,\n\t\t\t\tactiveProvince: province,\n\t\t\t};\n\t\tcase 'RESET':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveLocations: state.allLocations,\n\t\t\t\tnestedActiveLocations: nestedData(state.allLocations),\n\t\t\t\tactiveProvince: 'all',\n\t\t\t\tactiveUsage: 'all',\n\t\t\t\treset: false,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default parkingReducer;\n","/* eslint-disable indent */\n/* eslint-disable no-mixed-spaces-and-tabs */\nimport React, { useState, useRef, useEffect, useMemo, useReducer } from 'react';\nimport useDimensions from 'react-cool-dimensions';\nimport { useSpring, animated } from 'react-spring';\nimport { GlobalStyle, colors, px2vw } from './GlobalStyles.jsx';\nimport { useNLD } from './data/useNLD';\nimport { useParkingData } from './data/useParkingData';\nimport { useWrld } from './data/useWorld';\nimport useDataApi from './hooks/useDataApi';\nimport useWindowSize from './helpers/useWindowSize';\nimport {\n\tuseResizeObserver,\n\tuseObserver,\n\tuseRect,\n\tuseBbox,\n} from './helpers/useResizeObservers.js';\n\nimport { SVGContainer } from './components/SVGContainer';\nimport { Loading } from './components/Loading';\nimport { Container } from './components/StyledComponents';\nimport DrawViz from './components/DrawViz/';\nimport DrawNL from './components/DrawNL';\nimport PieChart from './components/PieChart';\n\nimport { formatData } from './helpers/formatters';\n\nimport { geoMercator, geoPath, scaleLinear, max, scaleOrdinal } from 'd3';\nconst parkeerData =\n\t'https://gist.githubusercontent.com/GiovanniDw/9ebe42d142f40e58e333e546a82f9b0d/raw/5f69fabb70e85ae64cf19633aadd38fcf26a75a4/parkeerData.csv';\n\nimport parkingReducer from './reducers/parkingReducer';\n\nconst initialState = {\n\tallLocations: [],\n\tactiveLocations: [],\n\tnestedActiveLocations: [],\n\tactiveUsage: 'all',\n\tactiveCity: [],\n\tactiveProvince: 'all',\n\tprovinces: [],\n\tsizeScale: [],\n\tcolorRange: [colors.darkBlue, colors.darkGray, colors.yellow],\n\treset: false,\n};\n\nexport const App = () => {\n\tconst [olddata, setData] = useState();\n\tconst [hoveredUsage, setHoveredUsage] = useState(null);\n\n\tconst [parkingData, dispatch] = useReducer(parkingReducer, initialState);\n\tconst [{ data, isLoading }] = useDataApi(\n\t\t'https://gist.githubusercontent.com/GiovanniDw/9ebe42d142f40e58e333e546a82f9b0d/raw/5f69fabb70e85ae64cf19633aadd38fcf26a75a4/parkeerData.csv',\n\t\t[]\n\t);\n\n\tconst vizWrapperRef = useRef();\n\n\tconst nld = useNLD();\n\t// const getData = useParkingData();\n\tconst wrld = useWrld();\n\n\t// const [container, setContainer] = useState(null);\n\n\tuseEffect(() => {\n\t\tif (data.length) {\n\t\t\tdispatch({\n\t\t\t\ttype: 'INITIAL_API_CALL',\n\t\t\t\tpayload: { data: formatData(data) },\n\t\t\t});\n\t\t}\n\t\t// console.log(isLoading);\n\t}, [data]);\n\n\t// useEffect(() => {\n\t// \tif (!getData) return;\n\t// \tsetData(getData);\n\t// \treturn;\n\t// }, [getData]);\n\n\tif (!nld || !parkingData) {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<Loading />\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// const filteredUsage = hoveredUsage\n\t// \t? olddata.filter((d) => colorValue(d))\n\t// \t: olddata;\n\n\t// const filteredData = activeProvinceFeature\n\t// \t? data.filter(\n\t// \t\t\t(d) =>\n\t// \t\t\t\tactiveProvinceFeature.properties.statnaam ===\n\t// \t\t\t\tprovinceValue(d)\n\t// \t  )\n\t// \t: data;\n\n\t// const filterData = () => {\n\t// \ttry {\n\t// \t\treturn data.filter(\n\t// \t\t\t(d) => activeProvince.properties.statnaam === provinceValue(d)\n\t// \t\t);\n\t// \t} catch (error) {\n\t// \t\treturn data;\n\t// \t}\n\t// };\n\n\treturn (\n\t\t<>\n\t\t\t<div className='App'>\n\t\t\t\t<Container ref={vizWrapperRef}>\n\t\t\t\t\t{isLoading ? (\n\t\t\t\t\t\t<Loading />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<DrawViz nld={nld} {...parkingData} dispatch={dispatch}>\n\t\t\t\t\t\t\t<h1 className='title'>\n\t\t\t\t\t\t\t\tParkeer plaatsen van Nederland{' '}\n\t\t\t\t\t\t\t\t{/* <span\n\t\t\t\t\t\t\t\t\tclassName='current-province'\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tsetActiveProvinceFeature(null)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{parkingData.activeProvince\n\t\t\t\t\t\t\t\t\t\t? `in ${parkingData.activeProvince}`\n\t\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t\t</span> */}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</DrawViz>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{/* <DrawNL nld={nld} penr={penr} size={size} /> */}\n\n\t\t\t\t\t{/* <MapNL/> */}\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t\t<GlobalStyle />\n\t\t</>\n\t);\n};\n\nexport default App;\n","import { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\n\nconst jsonNLD =\n\t'https://gist.githubusercontent.com/GiovanniDw/9ebe42d142f40e58e333e546a82f9b0d/raw/1f4e17c5e2a072e12ed5b2dce628413294a13c5e/nl_2020.json';\n\nexport const useNLD = () => {\n\tconst [data, setData] = useState(null);\n\tuseEffect(() => {\n\t\tjson(jsonNLD).then((topology) => {\n\t\t\tconst { gemeente_2020, provincie_2020 } = topology.objects;\n\t\t\tsetData({\n\t\t\t\tgemeente: feature(topology, gemeente_2020),\n\t\t\t\tgemeenteBorder: mesh(\n\t\t\t\t\ttopology,\n\t\t\t\t\tgemeente_2020,\n\t\t\t\t\t(a, b) => a !== b\n\t\t\t\t),\n\t\t\t\tprovince: feature(topology, provincie_2020),\n\t\t\t\tprovinceBorder: mesh(\n\t\t\t\t\ttopology,\n\t\t\t\t\tprovincie_2020,\n\t\t\t\t\t(a, b) => a !== b\n\t\t\t\t),\n\t\t\t});\n\t\t});\n\t}, []);\n\treturn data;\n};\n","import { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\n\nconst jsonWrld = 'https://unpkg.com/world-atlas@2.0.2/countries-10m.json';\n        \n\nexport const useWrld = () => {\n\tconst [data, setData] = useState(null);\n\tuseEffect(() => {\n\t\tjson(jsonWrld).then(topology => {\n\t\t\tconst { countries, land } = topology.objects;\n\t\t\tsetData({\n\t\t\t\tland: feature(topology, land),\n\t\t\t\tcountries: mesh(topology, countries, (a, b) => a !== b)\n\t\t\t});\n\t\t});\n\t}, []);\n\treturn data;\n};","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(\n\t\t\t({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\t\tgetCLS(onPerfEntry);\n\t\t\t\tgetFID(onPerfEntry);\n\t\t\t\tgetFCP(onPerfEntry);\n\t\t\t\tgetLCP(onPerfEntry);\n\t\t\t\tgetTTFB(onPerfEntry);\n\t\t\t}\n\t\t);\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}