{"version":3,"sources":["GlobalStyles.jsx","data/useParkingData.jsx","helpers/useWindowSize.jsx","helpers/useResizeObservers.js","components/SVGContainer.jsx","components/Loading.jsx","components/StyledComponents.jsx","components/ZoomContainer.jsx","components/Legend.jsx","components/DrawViz/Map.jsx","components/Chart.jsx","components/DrawViz/index.jsx","components/DrawNL.jsx","App.jsx","data/useNLD.jsx","data/useWorld.jsx","reportWebVitals.js","index.jsx"],"names":["colors","darkBlue","blue","lightBlue","dark","darkGray","midGray","lightGray","light","white","darkGreen","green","lightGreen","orange","darkPurple","purple","red","yellow","px2vw","size","width","GlobalStyle","createGlobalStyle","normalize","useParkingData","useState","data","setData","useEffect","dsv","autoType","d","province","replace","cleanProvince","usage","cleanUsage","id","minimumHeightInMeters","latitude","longitude","capacity","then","nested","group","keys","nestData","allDatas","rollups","v","sum","rollup","byUsage","allData","useWindowSize","useDimensions","ref","getRect","current","rect","setRect","handleResize","useCallback","useLayoutEffect","element","ResizeObserver","resizeObserver","observe","disconnect","window","addEventListener","removeEventListener","getBoundingClientRect","bottom","height","left","right","top","Context","createContext","SVGContainer","props","children","className","svgRef","useRef","svg","setSvg","viewBox","Provider","value","useSvg","useContext","Loading","StyledLoading","StyledSpinner","cx","cy","r","fill","strokeWidth","styled","div","primary","Container","StyledCircle","circle","active","ZoomContainer","path","activeProvince","setActiveProvince","svgElement","x","y","k","setTransform","zoomed","event","transform","select","attr","zoomMap","zoom","scaleExtent","on","currentProvince","node","bounds","x0","y0","x1","y1","selectAll","transition","duration","call","zoomIdentity","translate","scale","Math","min","max","zoomTransform","invert","Legend","colorScale","tickSpacing","tickSize","tickTextOffset","onHover","hoveredUsage","fadeOpacity","LegendLabel","dimensions","sizeScale","sizeLegendRef","selection","append","text","sizelegendG","join","format","textAnchor","domain","map","domainValue","i","onMouseEnter","onMouseOut","dy","opacity","Map","nld","colorValue","sizeValue","activateProvince","filteredUsage","gemeenteBorder","gemeente","provinceBorder","projection","geoMercator","geoPath","center","geoCentroid","geoBounds","geoDistance","sqrt","useMemo","features","title","properties","statnaam","onClick","Province","StyledProvincePath","Marks","name","Chart","filteredProvince","provinceValue","dataByUsage","length","pieChartRef","cache","pieSize","console","log","outerRadius","pieGenerator","pie","padAngle","sort","arcGenerator","arc","innerRadius","pieData","prevPieData","selectionWithData","exit","remove","enter","merge","attrTween","interpolator","interpolate","t","style","drawChart","DrawViz","filteredData","setHoveredUsage","maxRadius","setMaxradius","containerRef","scaleSqrt","range","g","App","json","topology","objects","gemeente_2020","provincie_2020","feature","mesh","a","b","useNLD","countries","land","useWrld","vizWrapperRef","colorRange","filter","error","filterData","scaleOrdinal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7401b0eb.chunk.js","sourcesContent":["import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nexport const colors = {\n\tdarkBlue: '#2F80ED',\n\tblue: '#2D9CDB',\n\tlightBlue: '#B3E5FC',\n\tdark: '#333333',\n\tdarkGray: '#4F4F4F',\n\tmidGray: '#828282',\n\tlightGray: '#BDBDBD',\n\tlight: '#E0E0E0',\n\twhite: '#F2F2F2',\n\tdarkGreen: '#219653',\n\tgreen: '#27AE60',\n\tlightGreen: '#6FCF97',\n\torange: '#F2994A',\n\tdarkPurple: '#9B51E0',\n\tpurple: '#BB6BD9',\n\tred: '#EB5757',\n\tyellow: '#F2C94C',\n};\n\n/**\n * Converts a CSS hex color value to RGBA.\n * @param {string} hex - Expanded hexadecimal CSS color value.\n * @param {number} alpha - Alpha as a decimal.\n * @returns {string} RGBA CSS color value.\n */\nexport const addAlpha = (hex, alpha) => {\n\tconst r = parseInt(hex.substring(1, 3), 16);\n\tconst g = parseInt(hex.substring(3, 5), 16);\n\tconst b = parseInt(hex.substring(5, 7), 16);\n\treturn `rgba(${r}, ${g}, ${b}, ${alpha})`;\n};\n\nexport const px2vw = (size, width = 1440) => `${(size / width) * 100}vw`;\n\nexport const GlobalStyle = createGlobalStyle`\n    ${normalize};\n\n\t* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  html {\n\t\n\t  box-sizing: border-box;\n        overflow-y: scroll;\n\t\t\n  }\n  #root {\n\t  ${'' /* min-width:100vw; */}\n\t  ${'' /* min-height:100vh; */}\n\t  ${'' /* -webkit-overflow-scrolling: touch; */}\n\t  padding-top: min(16px, env(safe-area-inset-top));\n\t  padding-left: min(16px, env(safe-area-inset-left));\n        padding-right: min(16px, env(safe-area-inset-right));\n        padding-bottom: min(16px, env(safe-area-inset-bottom));\n\t\t\n  }\n  :root {\n\t--safe-area-inset-top   : 16px;\n    --safe-area-inset-right : 16px;\n    --safe-area-inset-bottom: 16px;\n    --safe-area-inset-left  : 16px;  \n\tbody {\n\t\tbackground-color: ${colors.white};\n\t\tfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n\t\t'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n\t\t'Helvetica Neue', sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\t${'' /* min-width:100%;\n\tmin-height:100%; */}\n\tmin-width:100vw;\n\t\tmin-height:100vh;\n\t\n\t}\n\tcode {\n\tfont-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n\t\tmonospace;\n}\n\n      font-size: ${px2vw(30)};\n\n      @media (min-width: 768px) {\n        font-size: ${px2vw(35)};\n      }\n\n      @media (min-width: 1024px) {\n        font-size: ${px2vw(40)};\n      }\n    }\n\n\n.App {\n  background-color: ${colors.white};\n  max-width:100vw;\n\tmax-height:100vh;\n  ${'' /* margin: 0 auto; */}\n}\n.viz-wrapper {\n\twidth:100%;\n\theight:100%;\n\tdisplay:flex;\n\tposition:relative;\n\n\t.title {\n\t\tposition: absolute;\n\t\tpadding-left:1em;\n\t}\n}\n\n.province {\n\tstroke-opacity: 0.5;\n\tstroke-width: 1px;\n\t/* stroke: none; */\n\tstroke-linejoin: round;\n\tstroke-linecap: round;\n}\n.gemeente {\n\tfill-opacity: 1;\n\t\n\t/* stroke: white; */\n}\n.gemeente-borders{\n\tfill: none;\n\tstroke: ${colors.lightGreen};\n\t${'' /* stroke-width: 1; */}\n\tstroke-linejoin: round;\n\t${'' /* stroke-linecap: round; */}\n\tpointer-events: none;\n}\n.provinces {\n\tfill: ${colors.lightGreen};\n\tstroke: ${colors.white};\n\t${'' /* transition: 0.3s; */}\n}\n\n.provinces .active {\n\topacity: .8;\n\ttransition: visibility 0s, opacity 0.3s linear;\n}\n\n.province-borders {\n\tfill: none;\n\tstroke: var(--white);\n\tstroke-width: 1;\n\tstroke-linejoin: round;\n\tstroke-linecap: round;\n\tpointer-events: none;\n}\n\n.gemeente-grens {\n\tstroke-linejoin: round;\n\tstroke-linecap: round;\n\tstroke: ${colors.green};\n\tstroke-opacity: 1;\n\t/* stroke-width: 0.1em; */\n\t/* transition-duration: 0.5s; */\n\tfill: ${colors.lightGreen};\n}\n\n.legend-label {\n\tfont-weight:bold;\n}\n\n    `;\n\nexport default GlobalStyle;\n","import { useState, useEffect } from 'react';\nimport { csv, group, dsv, map, rollups, rollup, autoType, nest } from 'd3';\nimport { sum } from 'lodash';\n\nconst csvPenR =\n\t'https://gist.githubusercontent.com/GiovanniDw/9ebe42d142f40e58e333e546a82f9b0d/raw/1f4e17c5e2a072e12ed5b2dce628413294a13c5e/OpenParkingPenR.csv';\n\nconst csvParking =\n\t'https://gist.githubusercontent.com/GiovanniDw/9ebe42d142f40e58e333e546a82f9b0d/raw/55947d8316f6ab6cf5aa564229e5461d9414bf5b/openParking.csv';\n\nconst parkeerData =\n\t'https://gist.githubusercontent.com/GiovanniDw/9ebe42d142f40e58e333e546a82f9b0d/raw/5f69fabb70e85ae64cf19633aadd38fcf26a75a4/parkeerData.csv';\n\nconst ssv = '';\n\nconst row = (d) => {\n\tconst toKeep = ['id', 'name'];\n\n\tconst data = [];\n\n\td.filter;\n\n\treturn d;\n};\n\n// export const usePenR = () => {\n// \tconst [data, setData] = useState(null);\n// \tuseEffect(() => {\n// \t\tcsv(csvParking, cleanPenR).then((data) => {\n// \t\t\tconst byProvince = group(data, (d) => d.province);\n// \t\t\tconst byCity = group(data, (d) => d.city);\n// \t\t\tsetData({\n// \t\t\t\tbyProvince: byProvince,\n// \t\t\t\tbyCity: byCity,\n// \t\t\t\tallPenR: data,\n// \t\t\t});\n// \t\t});\n// \t}, []);\n// \treturn data;\n// };\n\nconst cleanProvince = (d) => {\n\tif (!d.province) return;\n\td.province = d.province.replace('Fryslân', 'Friesland');\n\n\treturn d;\n};\n\nconst cleanUsage = (d) => {\n\td.usage = d.usage\n\t\t.replace('park and ride', 'P+R Parkeerplaats')\n\t\t.replace('garage', 'Parkeergarage')\n\t\t.replace('terrain', 'Parkeerterrein');\n\n\treturn;\n};\n\nconst byUsage = (data) => {\n\tif (!data || data === null) return;\n\n\tlet allDatas = rollups(\n\t\tdata,\n\t\t(v) => sum(v, (d) => d.capacity),\n\t\t(d) => d.province\n\t);\n\n\tconst allData = rollup(\n\t\tdata,\n\t\t(v) => sum(v, (d) => d.capacity),\n\t\t(d) => d.usage\n\t);\n\n\t// const byGroup = nest()\n\t// \t.key((d) => d['province'])\n\t// \t.rollup((v) => sum(v, (d) => d.capacity))\n\t// \t.entries(data)\n\t// \t.map(((d) => category: d.key), (count: d.value));\n\n\treturn allDatas;\n};\n\nconst nestData = (data) => {\n\tconst nestedData = group(data, (d) => d).keys((d) => d.usage);\n\n\t// .rollups((d) => sum(d, (g) => g.capacity));\n\n\treturn nestedData;\n};\n\nexport const useParkingData = () => {\n\tconst [data, setData] = useState(null);\n\tuseEffect(() => {\n\t\tconst cleanParkingData = (d) => {\n\t\t\tcleanProvince(d);\n\t\t\tcleanUsage(d);\n\t\t\td.id = +d.id;\n\t\t\td.minimumHeightInMeters = +d.minimumHeightInMeters;\n\t\t\td.latitude = +d.latitude;\n\t\t\td.longitude = +d.longitude;\n\t\t\td.capacity = +d.capacity;\n\t\t\t// console.log(d);\n\n\t\t\treturn d;\n\t\t};\n\t\t// csv(csvParking, cleanParkingData).then(setData);\n\t\tdsv(';', parkeerData, autoType, cleanParkingData).then((d) => {\n\t\t\tconst allData = d;\n\n\t\t\tconst nested = nestData(d);\n\t\t\tconst usage = byUsage(d);\n\t\t\tsetData({ allData: d, byUsage: usage, nested: nested });\n\t\t});\n\t}, []);\n\n\treturn data;\n};\n","import React, { useState, useEffect } from 'react';\n\nfunction useWindowSize() {\n\t// Initialize state with undefined width/height so server and client renders match\n\t// Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n\tconst [windowSize, setWindowSize] = useState({\n\t\twidth: undefined,\n\t\theight: undefined,\n\t});\n\n\tuseEffect(() => {\n\t\t// Handler to call on window resize\n\t\tfunction handleResize() {\n\t\t\t// Set window width/height to state\n\t\t\tsetWindowSize({\n\t\t\t\twidth: window.innerWidth,\n\t\t\t\theight: window.innerHeight,\n\t\t\t});\n\t\t}\n\n\t\t// Add event listener\n\t\twindow.addEventListener('resize', handleResize);\n\n\t\t// Call handler right away so state gets updated with initial window size\n\t\thandleResize();\n\n\t\t// Remove event listener on cleanup\n\t\treturn () => window.removeEventListener('resize', handleResize);\n\t}, []); // Empty array ensures that effect is only run on mount\n\n\treturn windowSize;\n}\n\nexport default useWindowSize;\n","import {\n\tuseEffect,\n\tuseState,\n\tuseRef,\n\tuseLayoutEffect,\n\tuseCallback,\n} from 'react';\n\n/**\n * Hook, that returns the current dimensions of an HTML element.\n * Doesn't play well with SVG.\n */\n\n// export const useResizeObserver = (ref) => {\n// \tconst [dimensions, setDimensions] = useState(null);\n// \tuseEffect(() => {\n// \t\tconst observeTarget = ref;\n// \t\tconst ro = new ResizeObserver((entries, observer) => {\n// \t\t\tfor (const entry of entries) {\n// \t\t\t\tconst { width, height } = entry.contentRect;\n// \t\t\t\tconsole.log('Element:', entry.target);\n// \t\t\t\tsetDimensions(entry.contentRect);\n// \t\t\t}\n// \t\t});\n// \t\tro.observe(observeTarget.current);\n// \t}, [ref.current]);\n// \treturn dimensions;\n// };\n\n// export const useResizeObserver;\n\n// export const useObserver = ({ callback, element }) => {\n// \tconst current = element && element.current;\n\n// \tconst observer = useRef(null);\n\n// \tuseEffect(() => {\n// \t\t// if we are already observing old element\n// \t\tif (observer && observer.current && current) {\n// \t\t\tobserver.current.unobserve(current);\n// \t\t}\n// \t\tconst resizeObserverOrPolyfill = ResizeObserver;\n// \t\tobserver.current = new resizeObserverOrPolyfill(callback);\n// \t\tobserve();\n\n// \t\treturn () => {\n// \t\t\tif (observer && observer.current && element && element.current) {\n// \t\t\t\tobserver.current.unobserve(element.current);\n// \t\t\t}\n// \t\t};\n// \t}, [current]);\n\n// \tconst observe = () => {\n// \t\tif (element && element.current && observer.current) {\n// \t\t\tobserver.current.observe(element.current);\n// \t\t}\n// \t};\n// };\n\nexport const useDimensions = (ref) => {\n\tconst [rect, setRect] = useState(getRect(ref ? ref.current : null));\n\n\tconst handleResize = useCallback(() => {\n\t\tif (!ref.current) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update client rect\n\t\tsetRect(getRect(ref.current));\n\t}, [ref]);\n\n\tuseLayoutEffect(() => {\n\t\tconst element = ref.current;\n\t\tif (!element) {\n\t\t\treturn;\n\t\t}\n\n\t\thandleResize();\n\n\t\tif (typeof ResizeObserver === 'function') {\n\t\t\tlet resizeObserver = new ResizeObserver(() => handleResize());\n\t\t\tresizeObserver.observe(element);\n\n\t\t\treturn () => {\n\t\t\t\tif (!resizeObserver) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresizeObserver.disconnect();\n\t\t\t\tresizeObserver = null;\n\t\t\t};\n\t\t} else {\n\t\t\t// Browser support, remove freely\n\t\t\twindow.addEventListener('resize', handleResize);\n\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener('resize', handleResize);\n\t\t\t};\n\t\t}\n\t}, [ref, handleResize]);\n\n\treturn rect;\n};\n\nfunction getRect(element) {\n\tif (!element) {\n\t\treturn {\n\t\t\tbottom: 0,\n\t\t\theight: 0,\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\twidth: 0,\n\t\t};\n\t}\n\n\treturn element.getBoundingClientRect();\n}\n\nexport const useBbox = () => {\n\tconst ref = useRef();\n\tconst [bbox, setBbox] = useState({});\n\n\tconst set = () =>\n\t\tsetBbox(ref && ref.current ? ref.current.getBoundingClientRect() : {});\n\n\tuseEffect(() => {\n\t\tset();\n\t\twindow.addEventListener('resize', set);\n\t\treturn () => window.removeEventListener('resize', set);\n\t}, []);\n\n\treturn [bbox, ref];\n};\n","import React, {\n\tuseEffect,\n\tuseRef,\n\tuseState,\n\tcreateContext,\n\tuseContext,\n} from 'react';\n\nconst Context = createContext(null);\n\nexport const SVGContainer = (props) => {\n\tconst { size, children, className } = props;\n\tif (!size) return;\n\tconst { width, height } = size;\n\tconst svgRef = useRef(null);\n\tconst [svg, setSvg] = useState(null);\n\tuseEffect(() => setSvg(svgRef.current), []);\n\treturn (\n\t\t<svg\n\t\t\tclassName={className}\n\t\t\tref={svgRef}\n\t\t\tviewBox={`0 0 ${width} ${height}`}\n\t\t\twidth={width}\n\t\t\theight={height}\n\t\t>\n\t\t\t<Context.Provider value={svg}>{children}</Context.Provider>\n\t\t</svg>\n\t);\n};\n\nexport function useSvg() {\n\treturn useContext(Context);\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { colors } from '../GlobalStyles';\nexport const Loading = () => (\n\t<StyledLoading>\n\t\t<StyledSpinner viewBox='0 0 50 50'>\n\t\t\t<circle\n\t\t\t\tclassName='path'\n\t\t\t\tcx='25'\n\t\t\t\tcy='25'\n\t\t\t\tr='20'\n\t\t\t\tfill='none'\n\t\t\t\tstrokeWidth='4'\n\t\t\t/>\n\t\t\t<circle\n\t\t\t\tclassName='path'\n\t\t\t\tcx='25'\n\t\t\t\tcy='25'\n\t\t\t\tr='20'\n\t\t\t\tfill='none'\n\t\t\t\tstrokeWidth='4'\n\t\t\t/>\n\t\t\t<circle\n\t\t\t\tclassName='path'\n\t\t\t\tcx='25'\n\t\t\t\tcy='25'\n\t\t\t\tr='20'\n\t\t\t\tfill='none'\n\t\t\t\tstrokeWidth='4'\n\t\t\t/>\n\t\t</StyledSpinner>\n\t</StyledLoading>\n);\n\nexport const StyledSpinner = styled.svg`\n\tanimation: rotate 2s linear infinite;\n\tmargin: -25px 0 0 -25px;\n\twidth: 50px;\n\theight: 50px;\n\n\t& .path {\n\t\tstroke: ${colors.green};\n\t\tstroke-linecap: round;\n\t\tanimation: dash 1.5s ease-in-out infinite;\n\t}\n\n\t@keyframes rotate {\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\n\t@keyframes dash {\n\t\t0% {\n\t\t\tstroke-dasharray: 1, 150;\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t\t50% {\n\t\t\tstroke-dasharray: 90, 150;\n\t\t\tstroke-dashoffset: -35;\n\t\t}\n\t\t100% {\n\t\t\tstroke-dasharray: 90, 150;\n\t\t\tstroke-dashoffset: -124;\n\t\t}\n\t}\n`;\n\nconst StyledLoading = styled.div`\n\theight: 100vh;\n\twidth: 100vw;\n\tbackground: ${colors.primary};\n\tz-index: 4;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { px2vw, colors } from '../GlobalStyles';\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\tpadding-top: ${px2vw(32)};\n\tpadding-left: ${px2vw(32)};\n\tpadding-right: ${px2vw(32)};\n\tpadding-bottom: ${px2vw(32)};\n\tmax-width: 100%;\n\tmin-height: 100%;\n\n\theight: 100vh;\n\t.map {\n\t\tborder: 1px solid red;\n\t}\n\t.legend {\n\t\tposition: absolute;\n\n\t\tbottom: 0;\n\t\tleft: 10px;\n\t}\n`;\n\nexport const StyledCircle = styled.circle`\n\ttransition-duration: 100ms;\n\t/* fill: ${(props) => (props.active ? colors.blue : colors.blue)}; */\n\tfill-opacity: 1;\n\t/* stroke: ${(props) => (props.active ? props.fill : colors.blue)}; */\n\tstroke-width: 1;\n\t/* stroke-width: ${(props) => (props.active ? 1 : 3)}; */\n\t/* stroke: ${(props) => props.fill}; */\n\t&:hover {\n\t\t/* stroke: ${(props) => colors.red}; */\n\t}\n`;\n","import {\n\tselect,\n\tzoom,\n\tgeoPath,\n\tselection,\n\tselectAll,\n\tzoomIdentity,\n\tpointer,\n\tzoomTransform,\n} from 'd3';\nimport React, { useState, useEffect } from 'react';\nimport { useSvg } from './SVGContainer';\n\nexport const ZoomContainer = (props) => {\n\tconst { children, path, activeProvince, setActiveProvince } = props;\n\n\tconst svgElement = useSvg();\n\n\tconst [{ x, y, k }, setTransform] = useState({ x: 0, y: 0, k: 1 });\n\tconst zoomed = (event) => {\n\t\tconst { transform } = event;\n\t\tsetTransform(transform);\n\t};\n\n\tuseEffect(() => {\n\t\tif (!svgElement) return;\n\t\tconst svg = select(svgElement);\n\t\tconst width = svg.attr('width');\n\t\tconst height = svg.attr('height');\n\n\t\tconst zoomMap = zoom().scaleExtent([1, 10]).on('zoom', zoomed);\n\n\t\tconst reset = () => {\n\t\t\tsvg.transition()\n\t\t\t\t.duration(750)\n\t\t\t\t.call(\n\t\t\t\t\tzoomMap.transform,\n\t\t\t\t\tzoomIdentity,\n\t\t\t\t\tzoomTransform(svg.node()).invert([width / 2, height / 2])\n\t\t\t\t);\n\t\t\tsetActiveProvince(null);\n\t\t};\n\t\tconst currentProvince = select(activeProvince).node();\n\n\t\tif (activeProvince) {\n\t\t\tconst [[x0, y0], [x1, y1]] = path.bounds(currentProvince);\n\t\t\tsvg.selectAll('path');\n\t\t\tsvg.transition()\n\t\t\t\t.duration(750)\n\t\t\t\t.call(\n\t\t\t\t\tzoomMap.transform,\n\t\t\t\t\tzoomIdentity\n\t\t\t\t\t\t.translate(width / 2, height / 2)\n\t\t\t\t\t\t.scale(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t\t0.9 /\n\t\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t\t(x1 - x0) / width,\n\t\t\t\t\t\t\t\t\t\t(y1 - y0) / height\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.translate(-(x0 + x1) / 2, -(y0 + y1) / 2)\n\t\t\t\t);\n\t\t} else {\n\t\t\treset();\n\t\t}\n\n\t\tsvg.call(zoomMap);\n\t\treturn;\n\t}, [svgElement, activeProvince]);\n\n\treturn (\n\t\t<g transform={`translate(${x}, ${y}) scale(${k})`} strokeWidth={1 / k}>\n\t\t\t{children}\n\t\t</g>\n\t);\n};\n","import React, { useEffect, useRef } from 'react';\nimport { select, format } from 'd3';\nimport { StyledCircle } from './StyledComponents';\nexport const Checkbox = (props) => <input type='checkbox' {...props} />;\nimport { useSvg } from './SVGContainer';\nexport const Legend = ({\n\tcolorScale,\n\ttickSpacing = 25,\n\ttickSize = 8,\n\ttickTextOffset = -25,\n\tonHover,\n\thoveredUsage,\n\tfadeOpacity,\n\tLegendLabel,\n\tclassName,\n\tdimensions,\n\tsizeScale,\n}) => {\n\tconst { width, height } = dimensions;\n\tconst svgElement = useSvg();\n\tconst sizeLegendRef = useRef();\n\n\tuseEffect(() => {\n\t\tif (!svgElement) return;\n\t\t// console.log(sizeScale.range());\n\t\tconst svg = select(svgElement);\n\t\tlet circleX = 0;\n\t\t// old size value sizeScale.ticks(3).filter((d) => d)\n\n\t\tconst sizeValues = [100, 1000, 2400];\n\t\tconst selection = select(sizeLegendRef.current);\n\n\t\tselection\n\t\t\t.append('text')\n\t\t\t.text('Capaciteit Parkeergarage')\n\t\t\t.attr('transform', `translate(${circleX},80)`)\n\t\t\t.attr('class', 'legend-label');\n\n\t\tconst sizelegendG = selection\n\t\t\t.append('g')\n\t\t\t.attr('fill', '#444')\n\t\t\t.attr('transform', `translate(${circleX},120)`)\n\t\t\t.attr('text-anchor', 'end')\n\t\t\t.selectAll('g')\n\t\t\t.data(sizeValues)\n\t\t\t.join('g');\n\t\tsizelegendG\n\t\t\t.append('circle')\n\t\t\t.attr('fill', 'none')\n\t\t\t.attr('stroke', '#444')\n\t\t\t.attr('cy', (d) => -sizeScale(d))\n\t\t\t.attr('r', sizeScale);\n\t\tsizelegendG\n\t\t\t.append('text')\n\t\t\t.attr('y', (d) => -10 - 2 * sizeScale(d))\n\t\t\t.attr('x', tickTextOffset)\n\t\t\t.attr('dy', '1.3em')\n\t\t\t.text(format('.0f'))\n\t\t\t.attr('class', 'legend-text');\n\n\t\t// selection.append('text').text('hi');\n\t}, [svgElement, sizeLegendRef]);\n\n\treturn (\n\t\t<>\n\t\t\t{/* <div>\n\t\t\t\t{colorScale.domain().map((domainValue, i) => (\n\t\t\t\t\t<label key={i}>\n\t\t\t\t\t\t<Checkbox value={domainValue} checked />\n\t\t\t\t\t\t<span>{domainValue}</span>\n\t\t\t\t\t</label>\n\t\t\t\t))}\n\t\t\t</div> */}\n\t\t\t{/* <div> */}\n\t\t\t{/* <svg className={className}> */}\n\t\t\t<g transform={`translate(${width - 20}, ${100})`} textAnchor='end'>\n\t\t\t\t<g className='color-legend'>\n\t\t\t\t\t<text x={0} y={-25} className='legend-label'>\n\t\t\t\t\t\t{LegendLabel}\n\t\t\t\t\t</text>\n\t\t\t\t\t{colorScale.domain().map((domainValue, i) => (\n\t\t\t\t\t\t<g\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tclassName='tick'\n\t\t\t\t\t\t\ttransform={`translate(0,${i * tickSpacing})`}\n\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\t// console.log(domainValue);\n\t\t\t\t\t\t\t\tonHover(domainValue);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonMouseOut={() => {\n\t\t\t\t\t\t\t\tonHover(null);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<text x={tickTextOffset} dy='.32em'>\n\t\t\t\t\t\t\t\t{domainValue}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t<StyledCircle\n\t\t\t\t\t\t\t\tfill={colorScale(domainValue)}\n\t\t\t\t\t\t\t\tr={tickSize}\n\t\t\t\t\t\t\t\topacity={\n\t\t\t\t\t\t\t\t\thoveredUsage && domainValue !== hoveredUsage\n\t\t\t\t\t\t\t\t\t\t? fadeOpacity\n\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t))}\n\t\t\t\t</g>\n\t\t\t\t<g ref={sizeLegendRef} className='size-legend'></g>\n\t\t\t</g>\n\n\t\t\t{/* </svg> */}\n\t\t\t{/* </div> */}\n\t\t</>\n\t);\n};\n\nexport default Legend;\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { colors, px2vw } from '../../GlobalStyles';\nimport {\n\tgeoMercator,\n\tgeoPath,\n\tscaleLinear,\n\tmax,\n\tmin,\n\tscaleSqrt,\n\tgeoCentroid,\n\tgeoBounds,\n\tgeoDistance,\n} from 'd3';\nimport { ZoomContainer } from '../ZoomContainer';\n\nexport const Map = (props) => {\n\tconst {\n\t\tnld,\n\t\tdata,\n\t\tcolorScale,\n\t\tcolorValue,\n\t\tsizeScale,\n\t\tsizeValue,\n\t\tactiveProvince,\n\t\tactivateProvince,\n\t\tsetActiveProvince,\n\t\tfilteredUsage,\n\t\thoveredUsage,\n\t\tfadeOpacity,\n\t\tdimensions,\n\t} = props;\n\tconst { gemeente, gemeenteBorder, province, provinceBorder } = nld;\n\tconst { width, height } = dimensions;\n\tconst projection = geoMercator().translate([width / 2, height / 2]);\n\n\tconst path = geoPath().projection(projection);\n\tconst center = geoCentroid(province);\n\tconst bounds = geoBounds(province);\n\tconst distance = geoDistance(bounds[1], bounds[0]);\n\tconst scale = width / distance / Math.sqrt(2);\n\n\tprojection.scale(scale).center(center);\n\n\treturn (\n\t\t<>\n\t\t\t<ZoomContainer\n\t\t\t\tsetActiveProvince={setActiveProvince}\n\t\t\t\tactiveProvince={activeProvince}\n\t\t\t\tpath={path}\n\t\t\t\tsize={dimensions}\n\t\t\t\twidth={width}\n\t\t\t\theight={height}\n\t\t\t>\n\t\t\t\t{useMemo(\n\t\t\t\t\t() => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<g className='gemeentes'>\n\t\t\t\t\t\t\t\t{/* {gemeente.features.map((d) => (\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tkey={d.id}\n\t\t\t\t\t\t\t\t\tclassName='gemeente-grens'\n\t\t\t\t\t\t\t\t\td={path(d)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))} */}\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tclassName='gemeente-borders'\n\t\t\t\t\t\t\t\t\td={path(gemeenteBorder)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</g>\n\n\t\t\t\t\t\t\t<g className='provinces'>\n\t\t\t\t\t\t\t\t{province.features.map((d) => (\n\t\t\t\t\t\t\t\t\t<Province\n\t\t\t\t\t\t\t\t\t\tdata={d}\n\t\t\t\t\t\t\t\t\t\tkey={d.id}\n\t\t\t\t\t\t\t\t\t\td={path(d)}\n\t\t\t\t\t\t\t\t\t\ttitle={d.properties.statnaam}\n\t\t\t\t\t\t\t\t\t\tactive={activeProvince === d}\n\t\t\t\t\t\t\t\t\t\tonClick={() => activateProvince(d)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tclassName='province-borders'\n\t\t\t\t\t\t\t\t\td={path(provinceBorder)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t\t[path, province, provinceBorder, gemeenteBorder]\n\t\t\t\t)}\n\t\t\t\t<Marks\n\t\t\t\t\tfilteredUsage={filteredUsage}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tprojection={projection}\n\t\t\t\t\tcolorScale={colorScale}\n\t\t\t\t\tcolorValue={colorValue}\n\t\t\t\t\tactiveProvince={activeProvince}\n\t\t\t\t\thoveredUsage={hoveredUsage}\n\t\t\t\t\tfadeOpacity={fadeOpacity}\n\t\t\t\t\tsizeScale={sizeScale}\n\t\t\t\t\tsizeValue={sizeValue}\n\t\t\t\t/>\n\t\t\t\t{/* <Marks\n\t\t\t\t\tfilteredUsage={filteredUsage}\n\t\t\t\t\tdata={filteredUsage}\n\t\t\t\t\tprojection={projection}\n\t\t\t\t\tcolorScale={colorScale}\n\t\t\t\t\tcolorValue={colorValue}\n\t\t\t\t\tsizeValue={sizeValue}\n\t\t\t\t\tsizeScale={sizeScale}\n\t\t\t\t/> */}\n\t\t\t</ZoomContainer>\n\t\t</>\n\t);\n};\n\nconst Province = ({ d, active, onClick }) => {\n\treturn (\n\t\t<StyledProvincePath\n\t\t\tclassName={active ? 'province active' : 'province'}\n\t\t\td={d}\n\t\t\tonClick={onClick}\n\t\t\ttitle={d.properties}\n\t\t/>\n\t);\n};\n\nconst StyledProvincePath = styled.path`\n\t/* transition-duration: 700ms; */\n\n\t:hover {\n\t\topacity: 0.7;\n\t}\n`;\n\nconst Marks = ({\n\tdata,\n\tprojection,\n\tcolorScale,\n\tcolorValue,\n\tfilteredUsage,\n\tactiveProvince,\n\thoveredUsage,\n\tfadeOpacity,\n\tsizeScale,\n\tsizeValue,\n}) => {\n\treturn (\n\t\t<g className='parking-locations'>\n\t\t\t{data.map((d) => {\n\t\t\t\tconst [x, y] = projection([d.longitude, d.latitude]);\n\n\t\t\t\tconst reduceSizeOnScale = (d) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tactiveProvince &&\n\t\t\t\t\t\tactiveProvince.properties.statnaam === d.province\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else if (activeProvince) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn sizeScale(sizeValue(d));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t{\n\t\t\t\t\t/* console.log(hoveredUsage); */\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<StyledCircle\n\t\t\t\t\t\tkey={d.id}\n\t\t\t\t\t\tcx={x}\n\t\t\t\t\t\tcy={y}\n\t\t\t\t\t\tr={sizeScale(sizeValue(d))}\n\t\t\t\t\t\tfill={colorScale(colorValue(d))}\n\t\t\t\t\t\thoveredUsage={hoveredUsage}\n\t\t\t\t\t\tusage={d.usage}\n\t\t\t\t\t\topacity={\n\t\t\t\t\t\t\thoveredUsage && d.usage !== hoveredUsage\n\t\t\t\t\t\t\t\t? fadeOpacity\n\t\t\t\t\t\t\t\t: 0.8\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<title> {d.name}</title>\n\t\t\t\t\t</StyledCircle>\n\t\t\t\t);\n\t\t\t})}\n\t\t</g>\n\t);\n};\n\nconst StyledCircle = styled.circle`\n\ttransition-duration: 300ms;\n\t/* fill: ${(props) => (props.active ? colors.blue : colors.blue)}; */\n\tfill-opacity: 1;\n\t/* stroke: ${(props) => (props.active ? colors.red : colors.blue)}; */\n\t/* stroke-width: 0.5; */\n\t/* stroke-width: ${(props) => (props.active ? 1 : 3)}; */\n\t&:hover {\n\t\tstroke: ${colors.white};\n\t}\n`;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { select, pie, arc, rollups, interpolate } from 'd3';\nimport { useSvg } from './SVGContainer';\n\nimport { useDimensions } from '../helpers/useResizeObservers';\n\nexport const Chart = (props) => {\n\tconst {\n\t\tdata,\n\t\tdimensions,\n\t\tsizeScale,\n\t\tsizeValue,\n\t\tcolorValue,\n\t\tcolorScale,\n\t\tfilteredProvince,\n\t\tactiveProvince,\n\t\tprovinceValue,\n\t} = props;\n\tconst { width, height } = dimensions;\n\tconst dataByUsage = rollups(\n\t\tdata,\n\t\t(v) => v.length,\n\t\t(d) => d.usage\n\t);\n\n\tconst svgElement = useSvg();\n\tconst pieChartRef = useRef();\n\tconst cache = useRef(dataByUsage);\n\tconst pieSize = useDimensions(pieChartRef);\n\n\tconst drawChart = (dataByUsage) => {\n\t\tconst outerRadius = Math.min(width, height) / 10 - 1;\n\n\t\tconst pieGenerator = pie()\n\t\t\t.padAngle(0)\n\t\t\t.value((d) => d[1])\n\t\t\t.sort(null);\n\t\tconst arcGenerator = arc().innerRadius(20).outerRadius(outerRadius);\n\n\t\tconst pieData = pieGenerator(dataByUsage);\n\t\tconst prevPieData = pieGenerator(cache.current);\n\n\t\tconst selection = select(pieChartRef.current);\n\t\tconst selectionWithData = selection.selectAll('g.arc').data(pieData);\n\t\tselectionWithData.exit().remove();\n\n\t\tconst selectionWidthUpdate = selectionWithData\n\t\t\t.enter()\n\t\t\t.append('g')\n\t\t\t.attr('class', 'arc')\n\t\t\t.on('mouseover', (i) => console.log(colorScale(i)));\n\n\t\tconst path = selectionWidthUpdate\n\t\t\t.append('path')\n\t\t\t.merge(selectionWithData.select('path.arc'));\n\n\t\tconst arcTween = (d, i) => {\n\t\t\tconst interpolator = interpolate(prevPieData[i], d);\n\n\t\t\treturn (t) => arcGenerator(interpolator(t));\n\t\t};\n\n\t\tpath.attr('class', 'arc')\n\t\t\t.transition()\n\t\t\t.attrTween('d', arcTween)\n\t\t\t.style('fill', (i) => colorScale(i.data[0]))\n\t\t\t.style('stroke', '#ffffff')\n\t\t\t.style('stroke-width', 2);\n\t};\n\n\tuseEffect(() => {\n\t\tif (!data || !dimensions || !pieChartRef || !pieSize) return;\n\n\t\tconsole.log(cache);\n\n\t\tdrawChart(dataByUsage);\n\t\tcache.current = dataByUsage;\n\t}, [svgElement, data, pieChartRef, dimensions]);\n\n\treturn (\n\t\t<>\n\t\t\t<g\n\t\t\t\ttransform={`translate(${width - 10 - pieSize.width / 2}, ${\n\t\t\t\t\theight - 10 - pieSize.width / 2\n\t\t\t\t})`}\n\t\t\t>\n\t\t\t\t<g ref={pieChartRef} className='pie-chart'></g>\n\t\t\t</g>\n\t\t</>\n\t);\n};\n\nexport default Chart;\n","import React, { useRef, useState, useEffect, forwardRef, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { ZoomContainer } from '../ZoomContainer';\nimport { SVGContainer } from '../SVGContainer';\nimport { colors, addAlpha } from '../../GlobalStyles';\nimport { useDimensions, useBbox } from '../../helpers/useResizeObservers';\nimport Legend from '../Legend';\nimport { Map } from './Map';\nimport {\n\tgeoMercator,\n\tgeoPath,\n\tscaleLinear,\n\tmax,\n\tmin,\n\tscaleSqrt,\n\tgeoCentroid,\n\tgeoBounds,\n\tgeoDistance,\n} from 'd3';\nimport PieChart from '../PieChart';\nimport Chart from '../Chart';\n\nexport const DrawViz = (props) => {\n\tconst {\n\t\tnld,\n\t\tdata,\n\t\tfilteredUsage,\n\t\tfilteredData,\n\t\tcolorScale,\n\t\tcolorValue,\n\t\tsizeValue,\n\t\thoveredUsage,\n\t\tfadeOpacity,\n\t\tchildren,\n\t\tactiveProvince,\n\t\tsetActiveProvince,\n\t\tsetHoveredUsage,\n\t} = props;\n\tconst { gemeente, gemeenteBorder, province, provinceBorder } = nld;\n\tconst { allData } = data;\n\tconst [activeCity, setActiveCity] = useState(null);\n\tconst [maxRadius, setMaxradius] = useState(10);\n\tconst containerRef = useRef();\n\tconst dimensions = useDimensions(containerRef);\n\n\tconst sizeScale = useMemo(\n\t\t() =>\n\t\t\tscaleSqrt()\n\t\t\t\t.domain([0, max(allData, sizeValue)])\n\t\t\t\t.range([0, maxRadius]),\n\t\t[nld, data, sizeValue, maxRadius]\n\t);\n\n\tconst LegendLabel = 'Soort Parkeermogelijkheid';\n\n\tconst activateProvince = (d) => {\n\t\tif (activeProvince === null || activeProvince !== d) {\n\t\t\tsetActiveProvince(d);\n\t\t\tsetMaxradius(5);\n\t\t\treturn;\n\t\t} else if (activeProvince === d) {\n\t\t\tsetActiveProvince(null);\n\t\t\tsetMaxradius(10);\n\t\t\tconsole.log(filteredData);\n\t\t}\n\t};\n\n\tconst activateCity = (d) => {\n\t\tif (activeCity === null || activeCity !== d.city) {\n\t\t\treturn setActiveCity(d.city);\n\t\t}\n\t\tif (activeCity === d.city) {\n\t\t\treturn setActiveCity(null);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (!dimensions) return;\n\t}, [dimensions]);\n\n\treturn (\n\t\t<div className='viz-wrapper' ref={containerRef}>\n\t\t\t<SVGContainer className='map' size={dimensions}>\n\t\t\t\t<Map\n\t\t\t\t\tnld={nld}\n\t\t\t\t\tdata={filteredData}\n\t\t\t\t\tcolorScale={colorScale}\n\t\t\t\t\tcolorValue={colorValue}\n\t\t\t\t\tactiveProvince={activeProvince}\n\t\t\t\t\tactivateProvince={activateProvince}\n\t\t\t\t\thoveredUsage={hoveredUsage}\n\t\t\t\t\tfilteredUsage={filteredUsage}\n\t\t\t\t\tfadeOpacity={fadeOpacity}\n\t\t\t\t\tsizeScale={sizeScale}\n\t\t\t\t\tsizeValue={sizeValue}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tsetActiveProvince={setActiveProvince}\n\t\t\t\t/>\n\n\t\t\t\t<Legend\n\t\t\t\t\tclassName='legend'\n\t\t\t\t\tdata={allData}\n\t\t\t\t\tonHover={setHoveredUsage}\n\t\t\t\t\thoveredUsage={hoveredUsage}\n\t\t\t\t\tcolorScale={colorScale}\n\t\t\t\t\tcolorValue={colorValue}\n\t\t\t\t\ttickSpacing={22}\n\t\t\t\t\ttickSize={8}\n\t\t\t\t\ttickTextOffset={-18}\n\t\t\t\t\tfadeOpacity={0.2}\n\t\t\t\t\tLegendLabel={LegendLabel}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tsizeScale={sizeScale}\n\t\t\t\t/>\n\n\t\t\t\t<Chart\n\t\t\t\t\tdata={filteredData}\n\t\t\t\t\tonHover={setHoveredUsage}\n\t\t\t\t\thoveredUsage={hoveredUsage}\n\t\t\t\t\tfilteredUsage={filteredUsage}\n\t\t\t\t\tcolorScale={colorScale}\n\t\t\t\t\tcolorValue={colorValue}\n\t\t\t\t\tsizeValue={sizeValue}\n\t\t\t\t\tfadeOpacity={0.2}\n\t\t\t\t\tsetActiveProvince={setActiveProvince}\n\t\t\t\t\tactiveProvince={activeProvince}\n\t\t\t\t\tsetHoveredUsage={setHoveredUsage}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tsizeScale={sizeScale}\n\t\t\t\t/>\n\t\t\t</SVGContainer>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default DrawViz;\n","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { ZoomContainer } from './ZoomContainer';\nimport { colors, addAlpha } from '../GlobalStyles';\nimport { useSvg } from './SVGContainer';\nimport { geoMercator, geoPath, scaleLinear, max, min, select } from 'd3';\n\nexport const DrawNL = (props) => {\n\tconst gemeentesRef = useRef(null);\n\tconst provincesRef = useRef(null);\n\tconst parkingRef = useRef(null);\n\tconst { size, nld, penr } = props;\n\tconst { gemeente, province, provinceBorder } = nld;\n\tconst { allPenR } = penr;\n\n\t// const provinces = province.features;\n\n\tconst svgElement = useSvg();\n\n\tconst capacityColors = scaleLinear()\n\t\t.domain([1, 1000])\n\t\t.range(['white', 'black']);\n\tconst [activeProvince, setActiveProvince] = useState(null);\n\tconst [activeCity, setActiveCity] = useState(null);\n\tconst [provincesEl, setProvincesEl] = useState(null);\n\t// useEffect(() => props.svg(activeProvince), []);\n\tconst activateProvince = (event, d) => {\n\t\tif (activeProvince === null || activeProvince !== d) {\n\t\t\treturn setActiveProvince(d);\n\t\t}\n\t\tif (activeProvince === d) {\n\t\t\treturn setActiveProvince(null);\n\t\t}\n\t};\n\tconst projection = geoMercator().scale(6000).center([5.55, 52.2]);\n\tconst path = geoPath().projection(projection);\n\tuseEffect(() => {\n\t\tif (!svgElement) return;\n\n\t\tconst svg = select(svgElement);\n\n\t\tconst gemeentes = svg.select('.gemeentes').selectAll('path');\n\t\tconst provinces = svg.select('.provinces').selectAll('path');\n\t\tconst parking = svg.select('.parking-locations').selectAll('circle');\n\n\t\tsetProvincesEl(provinces);\n\n\t\t// const minCap = min(allPenR.capacity);\n\t\t// const maxCap = max(allPenR.capacity);\n\t\tconst capacityColors = scaleLinear()\n\t\t\t.domain([0, 1000])\n\t\t\t.range(['white', 'black']);\n\n\t\t// const setPoints = (d) => {\n\t\t// \tconst [x, y] = projection([d.longitude, d.latitude]);\n\t\t// };\n\n\t\tgemeentes\n\t\t\t.data(gemeente.features)\n\t\t\t.enter()\n\t\t\t.append('path')\n\t\t\t.attr('d', path)\n\t\t\t.attr('class', 'gemeente-grens');\n\n\t\tprovinces\n\t\t\t.data(province.features)\n\t\t\t.enter()\n\t\t\t.append('path')\n\t\t\t.attr('d', path)\n\t\t\t.attr('class', 'province')\n\t\t\t.on('click', activateProvince);\n\n\t\tparking\n\t\t\t.data(allPenR)\n\t\t\t.enter()\n\t\t\t.append('circle')\n\t\t\t.attr('r', '1')\n\t\t\t.attr('cx', (d) => projection([d.longitude, d.latitude])[0])\n\t\t\t.attr('cy', (d) => projection([d.longitude, d.latitude])[1]);\n\n\t\t// parking.transition().duration(500).attr('r', '2');\n\t}, [svgElement]);\n\n\treturn (\n\t\t<ZoomContainer\n\t\t\tsize={size}\n\t\t\tsetActiveProvince={setActiveProvince}\n\t\t\tactiveProvince={activeProvince}\n\t\t\tprovinces={provincesEl}\n\t\t\tpath={path}\n\t\t>\n\t\t\t<g className='gemeentes' />\n\t\t\t<g className='provinces' />\n\t\t\t<g className='parking-locations' />\n\t\t</ZoomContainer>\n\t);\n};\n\nconst StyledG = styled.g``;\n\n// const Province = ({ d, isActive, onClick }) => {\n// \treturn (\n// \t\t<StyledProvincePath\n// \t\t\tclassName={isActive ? 'province active' : 'province'}\n// \t\t\td={d}\n// \t\t\tonClick={onClick}\n// \t\t\ttitle={d.properties}\n// \t\t/>\n// \t);\n// };\n\n// const StyledProvincePath = styled.path`\n// \t/* transition-duration: 700ms; */\n\n// \t:hover {\n// \t\topacity: 0.5;\n// \t}\n// `;\n\n// const Circle = ({\n// \tcx,\n// \tcy,\n// \tr,\n// \tdata,\n// \tactiveProvince,\n// \tonMouseEnter,\n// \tactiveCity,\n// \tfill,\n// }) => {\n// \tconst { province, city, capacity } = data;\n\n// \tif (activeProvince && activeProvince.properties.statnaam == province) {\n// \t\tr = r * 1.5;\n// \t}\n\n// \treturn (\n// \t\t<StyledCircle\n// \t\t\tcx={cx}\n// \t\t\tcy={cy}\n// \t\t\tr={r}\n// \t\t\tonClick={onMouseEnter}\n// \t\t\tactive={activeCity}\n// \t\t\tfill={fill}\n// \t\t/>\n// \t);\n// };\n\n// const StyledCircle = styled.circle`\n// \ttransition-duration: 700ms;\n// \t/* fill: ${(props) => (props.active ? colors.blue : colors.blue)}; */\n// \tfill-opacity: 1;\n// \tstroke: ${(props) => (props.active ? colors.red : colors.blue)};\n// \tstroke-width: 0.5;\n// \t&:hover {\n// \t\tfill: ${colors.darkBlue};\n// \t}\n// `;\n\nexport default DrawNL;\n","import React, { useState, useRef, useEffect } from 'react';\nimport useDimensions from 'react-cool-dimensions';\nimport { GlobalStyle, colors, px2vw } from './GlobalStyles.jsx';\nimport { useNLD } from './data/useNLD';\nimport { useParkingData } from './data/useParkingData';\nimport { useWrld } from './data/useWorld';\n\nimport useWindowSize from './helpers/useWindowSize';\nimport {\n\tuseResizeObserver,\n\tuseObserver,\n\tuseRect,\n\tuseBbox,\n} from './helpers/useResizeObservers.js';\n\nimport { SVGContainer } from './components/SVGContainer';\nimport { Loading } from './components/Loading';\nimport { Container } from './components/StyledComponents';\nimport DrawViz from './components/DrawViz/';\nimport DrawNL from './components/DrawNL';\nimport PieChart from './components/PieChart';\nimport { geoMercator, geoPath, scaleLinear, max, scaleOrdinal } from 'd3';\n\nexport const App = () => {\n\tconst nld = useNLD();\n\tconst data = useParkingData();\n\tconst wrld = useWrld();\n\n\tconst [hoveredUsage, setHoveredUsage] = useState(null);\n\tconst [activeProvince, setActiveProvince] = useState(null);\n\n\tconst vizWrapperRef = useRef();\n\n\tif (!nld || !data) {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<Loading />\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// const [container, setContainer] = useState(null);\n\n\tconst colorValue = (d) => d.usage;\n\tconst provinceValue = (d) => d.province;\n\n\tconst colorRange = [colors.darkBlue, colors.darkGray, colors.yellow];\n\n\tconst sizeValue = (d) => d.capacity;\n\n\tconst sizeRange = [];\n\n\tconst filteredUsage = data.allData.filter(\n\t\t(d) => hoveredUsage === colorValue(d)\n\t);\n\n\tconst filterData = () => {\n\t\ttry {\n\t\t\treturn data.allData.filter(\n\t\t\t\t(d) => activeProvince.properties.statnaam === provinceValue(d)\n\t\t\t);\n\t\t} catch (error) {\n\t\t\treturn data.allData;\n\t\t}\n\t};\n\tconst filteredData = filterData();\n\tconst colorScale = scaleOrdinal()\n\t\t.domain(data.allData.map(colorValue))\n\t\t.range(colorRange);\n\n\t// useEffect(() => {\n\t// \t// setHoveredUsage(penr.map(d) => d.usage)\n\t// \t// if (containerRef.current) {\n\t// \t// \tconsole.log(containerRef);\n\t// \t// }\n\t// \t// setContainer(containerRef.current);\n\t// \t// const { containerRef } = useDimensions({\n\t// \t// \tonResize: ({ width, height }) => {\n\t// \t// \t\t// Triggered whenever the size of the target is changed\n\t// \t// \t\tsetSize({ width: width, height: height });\n\t// \t// \t},\n\t// \t// });\n\t// }, []);\n\t// useEffect(() => {\n\t// \tif (!dimensions) return;\n\n\t// \tconsole.log(width);\n\t// }, [dimensions]);\n\treturn (\n\t\t<>\n\t\t\t<Container ref={vizWrapperRef}>\n\t\t\t\t<DrawViz\n\t\t\t\t\tnld={nld}\n\t\t\t\t\tdata={data}\n\t\t\t\t\thoveredUsage={hoveredUsage}\n\t\t\t\t\tfilteredUsage={filteredUsage}\n\t\t\t\t\tfilteredData={filteredData}\n\t\t\t\t\tcolorScale={colorScale}\n\t\t\t\t\tcolorValue={colorValue}\n\t\t\t\t\tsizeValue={sizeValue}\n\t\t\t\t\tfadeOpacity={0.2}\n\t\t\t\t\tsetActiveProvince={setActiveProvince}\n\t\t\t\t\tactiveProvince={activeProvince}\n\t\t\t\t\tsetHoveredUsage={setHoveredUsage}\n\t\t\t\t>\n\t\t\t\t\t<h1 className='title'>\n\t\t\t\t\t\tParkeer plaatsen van Nederland{' '}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName='current-province'\n\t\t\t\t\t\t\tonClick={() => setActiveProvince(null)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{activeProvince\n\t\t\t\t\t\t\t\t? `in ${activeProvince.properties.statnaam}`\n\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</h1>\n\t\t\t\t</DrawViz>\n\n\t\t\t\t{/* <DrawNL nld={nld} penr={penr} size={size} /> */}\n\n\t\t\t\t{/* <MapNL/> */}\n\t\t\t</Container>\n\t\t\t<GlobalStyle />\n\t\t</>\n\t);\n};\n\nexport default App;\n","import { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\n\nconst jsonNLD =\n\t'https://gist.githubusercontent.com/GiovanniDw/9ebe42d142f40e58e333e546a82f9b0d/raw/1f4e17c5e2a072e12ed5b2dce628413294a13c5e/nl_2020.json';\n\nexport const useNLD = () => {\n\tconst [data, setData] = useState(null);\n\tuseEffect(() => {\n\t\tjson(jsonNLD).then((topology) => {\n\t\t\tconst { gemeente_2020, provincie_2020 } = topology.objects;\n\t\t\tsetData({\n\t\t\t\tgemeente: feature(topology, gemeente_2020),\n\t\t\t\tgemeenteBorder: mesh(\n\t\t\t\t\ttopology,\n\t\t\t\t\tgemeente_2020,\n\t\t\t\t\t(a, b) => a !== b\n\t\t\t\t),\n\t\t\t\tprovince: feature(topology, provincie_2020),\n\t\t\t\tprovinceBorder: mesh(\n\t\t\t\t\ttopology,\n\t\t\t\t\tprovincie_2020,\n\t\t\t\t\t(a, b) => a !== b\n\t\t\t\t),\n\t\t\t});\n\t\t});\n\t}, []);\n\treturn data;\n};\n","import { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\n\nconst jsonWrld = 'https://unpkg.com/world-atlas@2.0.2/countries-10m.json';\n        \n\nexport const useWrld = () => {\n\tconst [data, setData] = useState(null);\n\tuseEffect(() => {\n\t\tjson(jsonWrld).then(topology => {\n\t\t\tconst { countries, land } = topology.objects;\n\t\t\tsetData({\n\t\t\t\tland: feature(topology, land),\n\t\t\t\tcountries: mesh(topology, countries, (a, b) => a !== b)\n\t\t\t});\n\t\t});\n\t}, []);\n\treturn data;\n};","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(\n\t\t\t({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\t\tgetCLS(onPerfEntry);\n\t\t\t\tgetFID(onPerfEntry);\n\t\t\t\tgetFCP(onPerfEntry);\n\t\t\t\tgetLCP(onPerfEntry);\n\t\t\t\tgetTTFB(onPerfEntry);\n\t\t\t}\n\t\t);\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}